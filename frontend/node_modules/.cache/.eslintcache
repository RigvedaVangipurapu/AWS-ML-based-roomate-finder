[{"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\index.js":"1","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\App.js":"2","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\PremiumContent.js":"3","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Home.js":"4","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Login.js":"5","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Register.js":"6","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\MyProfile.js":"7","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\service\\AuthService.js":"8","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\NotFound.js":"9","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Friends.js":"10"},{"size":254,"mtime":1671730507284,"results":"11","hashOfConfig":"12"},{"size":2694,"mtime":1671772938815,"results":"13","hashOfConfig":"12"},{"size":858,"mtime":1671161355359,"results":"14","hashOfConfig":"12"},{"size":16383,"mtime":1671772469509,"results":"15","hashOfConfig":"12"},{"size":2906,"mtime":1671758714973,"results":"16","hashOfConfig":"12"},{"size":20203,"mtime":1671736580626,"results":"17","hashOfConfig":"12"},{"size":4618,"mtime":1671762967831,"results":"18","hashOfConfig":"12"},{"size":1030,"mtime":1671772926046,"results":"19","hashOfConfig":"12"},{"size":131,"mtime":1671730507372,"results":"20","hashOfConfig":"12"},{"size":5715,"mtime":1671771168097,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n3brla",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\index.js",[],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\App.js",["60","61","62"],[],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes, Link } from \"react-router-dom\";\nimport Home from \"./Home\"\nimport Login from \"./Login\"\nimport Register from \"./Register\"\nimport MyProfile from \"./MyProfile\"\n// import PremiumContent from \"./PremiumContent\"\nimport { getUser, getToken, setUserSession, resetUserSession, getUsers } from './service/AuthService'\nimport axios from 'axios';\nimport NotFound from './NotFound';\nimport Friends from './Friends';\nimport { useNavigate } from 'react-router-dom';\n\n// const verifyTokenUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/verify\"\nconst verifyTokenUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/verify\"\n\nfunction App() {\n\n  const [isAuthenticating, setAuthenticating] = useState(true);\n\n\n  useEffect(() => {\n    const token = getToken();\n    if (token === 'undefined' || token === undefined || token === null || !token) {\n      return;\n    }\n\n    const requestBody = {\n      user: getUser(),\n      token: token,\n      scanResult: getUsers()\n    }\n    console.log(requestBody.scanResult)\n    axios.post(verifyTokenUrl, requestBody).then(response => {\n      setUserSession(response.data.user, response.data.token, requestBody.scanResult);\n      setAuthenticating(false)\n    }).catch((error) => {\n      resetUserSession();\n      setAuthenticating(false)\n    })\n  }, []);\n\n  // const token = getToken()\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div className=\"header\">\n          <div className=\"nav-container\" >\n            <div className=\"nav-flex\" >\n              <div ><Link to=\"/\"><img src='favicon.png' /></Link></div>\n              <div className=\"nav-items\" >\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/friends\">Friends</Link>\n                <Link to=\"/my-profile\">My Profile</Link>\n                <Link to=\"/login\">Login</Link>\n                <Link to=\"/register\">Register</Link>\n\n                {/* <Link to=\"/premium-content\">Premium Content</Link> */}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content\">\n          <Routes>\n            <Route path=\"\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            {/* <Route path=\"/premium-content\" element={<PremiumContent />} /> */}\n            <Route path=\"/my-profile\" element={<MyProfile />} />\n            <Route path=\"/friends\" element={<Friends />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\PremiumContent.js",["63"],[],"import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUser, resetUserSession } from './service/AuthService'\r\n\r\nconst PremiumContent = () => {\r\n    const navigate = useNavigate();\r\n    const user = getUser();\r\n    const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n    //If user not  authenticated, redirect them to login\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [user])\r\n    const logoutHandler = () => {\r\n        resetUserSession();\r\n        navigate('/login');\r\n    }\r\n    if (user) {\r\n        return (\r\n            <div>\r\n                Hello {name}! You have been logged in! <br />\r\n                <input type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PremiumContent;",[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Home.js",["64","65","66","67","68","69","70","71","72","73","74","75"],[],"// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { getUser, resetUserSession, getUsers } from './service/AuthService';\r\n// import axios from 'axios';\r\n\r\n// // const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\r\n// const editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\r\n\r\n// const Home = () => {\r\n//     const navigate = useNavigate();\r\n//     const user = getUser();\r\n//     const [users, setUsers] = useState(getUsers())\r\n//     // \r\n//     const [searchUser, setUser] = useState('');\r\n//     const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n//     useEffect(() => {\r\n//         if (!user) {\r\n//             navigate(\"/login\")\r\n//         }\r\n//     }, [user])\r\n\r\n//     const logoutHandler = () => {\r\n//         resetUserSession();\r\n//         navigate('/login');\r\n//     }\r\n\r\n//     const submitHandler = (event) => {\r\n//         event.preventDefault();\r\n//         if (searchUser.trim() === '') {\r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     const handleClick = (receiver) => {\r\n//         const requestBody = {\r\n//             \"sender\": user.username,\r\n//             \"receiver\": receiver,\r\n//             \"request\": \"pending\"\r\n//         }\r\n//         axios.post(editUserUrl, requestBody).then(response => {\r\n//             sessionStorage.setItem('scanResult', JSON.stringify(response.data));\r\n//             const data = response.data;\r\n//             for (let i = 0; i < data.length; i++) {\r\n//                 if (data[i].username === user.username) {\r\n//                     sessionStorage.setItem('user', JSON.stringify(data[i]));\r\n//                     break\r\n//                 }\r\n//             }\r\n//             setUsers(response.data)\r\n//             alert('Request sent succesfully');\r\n//         }).catch(error => {\r\n//             if (error.response.status === 401 || error.response.status === 403) {\r\n//                 alert(error.response.data.message);\r\n//             } else {\r\n//                 alert('Backend server error');\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     const checkSent = (friends) => {\r\n//         for (let i = 0; i < friends.length; i++) {\r\n//             if (friends[i].name === user.username && friends[i].status === \"received\") {\r\n//                 return true\r\n//             }\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n//     const checkReceived = (friends) => {\r\n//         for (let i = 0; i < friends.length; i++) {\r\n//             if (friends[i].name === user.username && friends[i].status === \"sent\") {\r\n//                 return true\r\n//             }\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n//     if (user) {\r\n//         return (\r\n//             <div>\r\n\r\n//                 <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n//                 <strong>Hello {name}!</strong> You have been logged in.\r\n//                 <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n//                 </div>\r\n\r\n//                 <form onSubmit={submitHandler}>\r\n//                     <div class=\"input-group mb-3\">\r\n//                         <input type=\"text\" value={searchUser} onChange={event => setUser(event.target.value)} class=\"form-control\" placeholder=\"Search a user directly..\" aria-label=\"Search text\" aria-describedby=\"button-search\"/>\r\n//                         <button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-search\">Search</button>\r\n//                     </div>\r\n//                 </form>\r\n\r\n//                 <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\r\n\r\n//                 <ul>\r\n//                     {users.filter((u) => {\r\n//                         let fr = user.friendlist;\r\n//                         let found = false;\r\n//                         for (let i = 0; i < fr.length; i++) {\r\n//                             if (fr[i].name === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\r\n//                                 found = true\r\n//                             }\r\n//                         }\r\n//                         if (u.username === user.username) {\r\n//                             found = true\r\n//                         }\r\n//                         if (!found) return u\r\n//                     }).map((receiver) => {\r\n//                         return <li key={receiver.username} style={{ display: \"flex\" }}>\r\n//                             <div>\r\n//                                 {receiver.username}\r\n//                             </div>\r\n//                             {checkSent(receiver.friendlist) ?\r\n//                                 <button disabled>Sent</button> :\r\n//                                 checkReceived(receiver.friendlist) ?\r\n//                                     <button disabled>Received Request</button> :\r\n//                                     <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\r\n\r\n//                             }\r\n\r\n//                         </li>\r\n//                     })}\r\n//                 </ul>\r\n//                 <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Home;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUser, resetUserSession, getUsers } from './service/AuthService';\r\nimport axios from 'axios';\r\n\r\nconst getRecommendations = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/home\";\r\n// const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\r\nconst editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\r\nvar searchUsers = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/search\";\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState(getUser());\r\n    //TODO: Commented this line\r\n    var [users, setUsers] = useState(getUsers())\r\n    // console.log(\"Users:\", users)\r\n    const [searchUser, setSearchUser] = useState('');\r\n    const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [user])\r\n    React.useEffect(() => loadRecommendations(), [])\r\n    const logoutHandler = () => {\r\n        resetUserSession();\r\n        navigate('/login');\r\n    }\r\n\r\n    const loadRecommendations = (event) => {\r\n        const loadedRecommendations = JSON.parse(sessionStorage.getItem('recommendations'));\r\n        if (loadedRecommendations == undefined && user) {\r\n            console.log(\"In load recommendations \\n\");\r\n            const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n            console.log(\"Logged in user is \\n\");\r\n            console.log(loggedInUser);\r\n            var jsonData = {};\r\n            jsonData['age'] = parseInt(loggedInUser['age']);\r\n            jsonData['sex'] = loggedInUser['sex'];\r\n            jsonData['orientation'] = loggedInUser['orientation'];\r\n            jsonData['diet'] = loggedInUser['diet'];\r\n            jsonData['drinks'] = loggedInUser['drinks'];\r\n            jsonData['drugs'] = loggedInUser['drugs'];\r\n            jsonData['ethnicity'] = loggedInUser['ethnicity'];\r\n            jsonData['income'] = loggedInUser['income'];\r\n            jsonData['location'] = loggedInUser['location'];\r\n            jsonData['pets'] = loggedInUser['pets'];\r\n            jsonData['smokes'] = loggedInUser['smokes'];\r\n            jsonData['speaks'] = loggedInUser['speaks'];\r\n            console.log(\"Json data is\\n\");\r\n            console.log(jsonData);\r\n            axios.post(getRecommendations, jsonData).then(response => {\r\n                console.log(response.data.recommendations);\r\n                sessionStorage.setItem(\"recommendations\", JSON.stringify(response.data.recommendations));\r\n                setUsers(response.data.recommendations);\r\n            });\r\n        }\r\n        else {\r\n            setUsers(loadedRecommendations);\r\n        }\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        var key = document.getElementById(\"key\").value;\r\n        var value = document.getElementById(\"value\").value;\r\n        // TODO: Make a call to the /search API\r\n\r\n        // if (searchUser.trim() === '') {\r\n        //     return;\r\n        // }\r\n        console.log(\"Url for search is \", searchUsers + \"?\" + key + \"=\" + value);\r\n        axios.get(searchUsers + \"?\" + key + \"=\" + value).then((response) => {\r\n            console.log(\"Search users response is\\n\");\r\n            console.log(response);\r\n            var arr = [];\r\n            if (response.data != undefined) {\r\n                var loadedRecommendations = JSON.parse(sessionStorage.getItem('searchedusers'));\r\n                if (loadedRecommendations == null) {\r\n                    loadedRecommendations = [];\r\n                }\r\n                loadedRecommendations.push(response.data);\r\n                sessionStorage.setItem(\"searchedusers\", JSON.stringify(loadedRecommendations));\r\n                arr.push(response.data);\r\n                setUsers(arr);\r\n            }\r\n            else {\r\n                alert(\"No users with the given username found\");\r\n            }\r\n        })\r\n        /* const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n        console.log(\"Logged in user is \\n\");\r\n        console.log(loggedInUser);\r\n        var jsonData = {};\r\n            jsonData['age'] = parseInt(loggedInUser['age']);\r\n            jsonData['sex']= loggedInUser['sex'];\r\n            jsonData['orientation']= loggedInUser['orientation'];\r\n            jsonData['diet']= loggedInUser['diet'];\r\n            jsonData['drinks']= loggedInUser['drinks'];\r\n            jsonData['drugs']= loggedInUser['drugs'];\r\n            jsonData['ethnicity']= loggedInUser['ethnicity'];\r\n            jsonData['income']= loggedInUser['income'];\r\n            jsonData['location']= loggedInUser['location'];\r\n            jsonData['pets']= loggedInUser['pets'];\r\n            jsonData['smokes']= loggedInUser['smokes'];\r\n            jsonData['speaks']= loggedInUser['speaks'];\r\n            console.log(\"Json data is\\n\");\r\n            console.log(jsonData);\r\n            axios.post(getRecommendations, jsonData).then(response => {\r\n                // TODO: Attach the response to the users that are displayed in the page\r\n                for(var index in response.data.recommendations)\r\n                {\r\n                    var recommendation = response.data.recommendations[index];\r\n                    console.log(recommendation['friendlist'])\r\n                    recommendation['friendlist'] = recommendation['friendlist'].replace(/'/g, '\"');\r\n                    recommendation['friendlist'] = JSON.parse(recommendation['friendlist']);\r\n                }\r\n                console.log(response.data.recommendations);\r\n                setUsers(response.data.recommendations);\r\n                \r\n            }); */\r\n    }\r\n    let number = 0;\r\n    const handleClick = (receiver) => {\r\n        const requestBody = {\r\n            \"sender\": user.username,\r\n            \"receiver\": receiver,\r\n            \"request\": \"pending\"\r\n        }\r\n        axios.post(editUserUrl, requestBody).then(response => {\r\n            console.log(response);\r\n            sessionStorage.setItem('user', JSON.stringify(response.data));\r\n            setUser(response.data)\r\n            let newUsers = users.map((eachUser) => {\r\n                if (eachUser.username === receiver) {\r\n                    eachUser.friendlist.push({ name: user.name, username: user.username, request: \"pending\", status: \"received\" })\r\n                }\r\n                return eachUser\r\n            })\r\n            setUsers(newUsers)\r\n            sessionStorage.setItem('recommendations', JSON.stringify(newUsers));\r\n            alert('Request sent succesfully');\r\n        }).catch(error => {\r\n            if (error.response.status === 401 || error.response.status === 403) {\r\n                alert(error.response.data.message);\r\n            } else {\r\n                alert('Backend server error');\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkSent = (friends) => {\r\n        if (friends != undefined) {\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (friends[i].username === user.username && friends[i].status === \"received\") {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkReceived = (friends) => {\r\n        if (friends != undefined) {\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (friends[i].username === user.username && friends[i].status === \"sent\") {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    if (user && users) {\r\n        return (\r\n            <div>\r\n\r\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>Hello {name}!</strong> You have been logged in.\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                </div>\r\n\r\n                <form onSubmit={submitHandler}>\r\n                    <input type=\"text\" name=\"By\" id=\"key\" />\r\n                    <input type=\"text\" name=\"Value\" id=\"value\" />\r\n                    <input type=\"submit\" value=\"Search\" />\r\n                </form>\r\n\r\n                <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\r\n\r\n\r\n                {users.filter((u) => {\r\n                    let fr = user.friendlist;\r\n                    let found = false;\r\n                    console.log(\"Friendlist is \\n\");\r\n                    console.log(fr);\r\n                    if (fr != undefined) {\r\n                        for (let i = 0; i < fr.length; i++) {\r\n                            if (fr[i].username === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\r\n                                found = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (u.username === user.username) {\r\n                        found = true\r\n                    }\r\n                    if (!found) return u\r\n                }).map((receiver) => {\r\n                    number += 1;\r\n                    var link = \"my-profile?uname=\" + receiver.username;\r\n                    return <div>\r\n                        {/* <div>\r\n                                {receiver.username}\r\n                            </div> */}\r\n                        <table style={{ float: \"right\", width: \"45%\", margin: \"20px\" }}>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.name} ( <a href={link}>{receiver.username}</a> )</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.location}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.sex == \"m\" ? \"Male\" : \"Female\"}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    {checkSent(receiver.friendlist) ?\r\n                                        <button disabled>Sent</button> :\r\n                                        checkReceived(receiver.friendlist) ?\r\n                                            <button disabled>Received Request</button> :\r\n                                            <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                })}\r\n\r\n                <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>Loading...</div>\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Login.js",["76"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserSession } from './service/AuthService';\nimport { getUser } from './service/AuthService'\nimport axios from 'axios';\n\n// const loginUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/login\";\nconst loginUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/login\"\n\nconst Login = (props) => {\n    const navigate = useNavigate();\n    const user = getUser();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    //If user authenticated, redirect them\n    useEffect(() => {\n        if (user) {\n            navigate(\"/\")\n        }\n    }, [user])\n\n    // If user not authenticated, show them login form\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if (username.trim() === '' || password.trim() === '') {\n            setErrorMessage('All fields required');\n            return;\n        }\n\n        setErrorMessage(null);\n        const requestBody = {\n            username: username,\n            password: password\n        }\n        axios.post(loginUrl, requestBody).then((response) => {\n            console.log(response.data.scanResult);\n            if (response.data.user.friendList === \"[]\") response.data.user.friendlist = []\n            setUserSession(response.data.user, response.data.token, response.data.scanResult);\n            // props.history.push('/premium-content');\n            navigate('/');\n            console.log(\"Logged in\")\n        }).catch((error) => {\n            // console.log(error)\n            if (error.response.status === 401 || error.response.status === 403) {\n                setErrorMessage(error.response.data.message);\n            } else {\n                setErrorMessage('Backend server error');\n            }\n        })\n    }\n\n    return (\n        <div>\n            <form class=\"w-80\" onSubmit={submitHandler}>\n                <h3 class=\"mb-30\">Login</h3>\n\n                <div class=\"w-50 mb-3\">\n                    <label for=\"username\" class=\"form-label\">Username</label>\n                    <input placeholder=\"Enter your username\" id=\"username\" type=\"text\" class=\"form-control\" required value={username} onChange={event => setUsername(event.target.value)} /> <br />\n                    <label for=\"password\" class=\"form-label\">Password</label>\n                    <input placeholder=\"Enter your password\" id=\"password\" type=\"password\" class=\"form-control\" required value={password} onChange={event => setPassword(event.target.value)} /> <br />\n                    <input class=\" btn btn-primary\" type=\"submit\" value=\"Login\" />\n                </div>\n            </form>\n\n            {errorMessage && <p class=\"message\"> {errorMessage} </p>}\n        </div>\n    )\n}\n\nexport default Login;","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Register.js",["77"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUser } from './service/AuthService'\nimport axios from 'axios';\n\n// const registerUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/register\"\nconst registerUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/register\"\n\nconst Register = () => {\n    const navigate = useNavigate();\n    const user = getUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    //If user authenticated, redirect them\n    useEffect(() => {\n        if (user) {\n            navigate(\"/\")\n        }\n    }, [user])\n\n    const submitHandler = (event) => {\n\n        const isEmpty = (element) => {\n            return (!element.value.trim() || element.value.trim() === \"\")\n        }\n\n        event.preventDefault();\n        if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n            setMessage('All fields required');\n            return;\n        }\n        for (let ele of event.target.elements) {\n            if (isEmpty(ele)) {\n                setMessage('All fields required')\n                return;\n            }\n        }\n\n\n        setMessage(null);\n        const requestBody = {\n            username: username,\n            email: email,\n            name: name,\n            password: password,\n        }\n        for (let ele of event.target.elements) {\n            if (ele.name !== \"\") {\n                requestBody[ele.name] = ele.value\n            }\n        }\n        axios.post(registerUrl, requestBody).then(response => {\n            setMessage('Registeration succesful');\n        }).catch(error => {\n            if (error.response.status === 401 || error.response.status === 403) {\n                setMessage(error.response.data.message);\n            } else {\n                setMessage('Backend server error');\n            }\n        })\n    }\n\n    return (\n        <div>\n            <form onSubmit={submitHandler}>\n                <h3 class=\"mb-30\">Register</h3>\n\n                <div class=\"container\">\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-5\" >\n                            <div class=\"mb-3\">\n                                <label for=\"name\" class=\"form-label\">Name</label>\n                                <input placeholder=\"Enter your name\" id=\"name\" type=\"text\" class=\"form-control\" required value={name} onChange={event => setName(event.target.value)} /> <br />\n                                <label for=\"email\" class=\"form-label\">Email</label>\n                                <input placeholder=\"Enter your email\" id=\"email\" type=\"email\" class=\"form-control\" required value={email} onChange={event => setEmail(event.target.value)} /> <br />\n                                <label for=\"username\" class=\"form-label\">Username</label>\n                                <input placeholder=\"Enter your username\" id=\"username\" type=\"text\" class=\"form-control\" required value={username} onChange={event => setUsername(event.target.value)} /> <br />\n                                <label for=\"password\" class=\"form-label\">Password</label>\n                                <input placeholder=\"Enter your password\" id=\"password\" type=\"password\" class=\"form-control\" required value={password} onChange={event => setPassword(event.target.value)} /> <br />\n\n                                <label for=\"age\" class=\"form-label\">Age</label>\n                                <input placeholder=\"Enter your age\" name='age' id=\"age\" type=\"number\" class=\"form-control\" required /> <br />\n\n                                {/* <fieldset> */}\n                                <label for=\"sex\" class=\"form-label\">Sex</label>\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" name=\"sex\" class=\"form-check-input\" id=\"sexmale\" />\n                                    <label class=\"form-check-label\" for=\"sexmale\">Male</label>\n                                </div>\n                                <div class=\"mb-3 form-check\">\n                                    <input type=\"radio\" name=\"sex\" class=\"form-check-input\" id=\"sexfemale\" />\n                                    <label class=\"form-check-label\" for=\"sexfemale\">Female</label>\n                                </div>\n                                {/* </fieldset> */}\n\n                                <label for=\"orientation\" class=\"form-label\">Orientation</label>\n                                <select name=\"orientation\" class=\"mb-3 custom-select form-select\" id=\"orientation\">\n                                    <option selected>Select your sexual orientation</option>\n                                    <option value=\"straight\">straight</option>\n                                    <option value=\"bisexual\">bisexual</option>\n                                    <option value=\"gay\">gay</option>\n                                </select>\n\n                                <label for=\"diet\" class=\"form-label\" > Diet</label>\n                                <select name=\"diet\" class=\"mb-3 custom-select form-select\" id=\"diet\">\n                                    <option selected>Select your diet type</option>\n                                    <option value=\"vegetarian\">vegetarian</option>\n                                    <option value=\"vegan\">vegan</option>\n                                    <option value=\"halal\">halal</option>\n                                    <option value=\"kosher\">kosher</option>\n                                    <option value=\"anything\">anything</option>\n                                    <option value=\"other\">other</option>\n                                </select>\n\n                                <label for=\"education\" class=\"form-label\">Education</label>\n                                <input placeholder=\"Enter your education details\" name='education' id=\"education\" type=\"text\" class=\"form-control\" required /> <br />\n\n                                <label for=\"income\" class=\"form-label\">Income</label>\n                                <input placeholder=\"Enter your approx income\" name='income' id=\"income\" type=\"text\" class=\"form-control\" required /> <br />\n\n                            </div>\n                        </div>\n                        <div class=\"col-5\" >\n                            <div class=\"mb-3\">\n                                <label for=\"ethnicity\" class=\"form-label\" >Ethnicity</label>\n                                <select name=\"ethnicity\" multiple class=\"mb-3 custom-select form-select\" id=\"ethnicity\">\n                                    <option selected>Which ethnicity do you belong to?</option>\n                                    <option value=\"asian\">Asian</option>\n                                    <option value=\"white\">White</option>\n                                    <option value=\"black\">Black</option>\n                                    <option value=\"hispanic/latin\">Hispanic/Latino</option>\n                                    <option value=\"indian\">Indian</option>\n                                    <option value=\"pacificislander\">Pacific Islander</option>\n                                    <option value=\"middleeastern\">Middle Eastern</option>\n                                    <option value=\"nativeamerican\">Native American</option>\n                                </select>\n\n                                <label for=\"pets\" class=\"form-label\"> pets</label>\n                                <select name=\"pets\" multiple class=\"mb-3 custom-select form-select\" id=\"pets\">\n                                    <option selected>Do you own any pets?</option>\n                                    <option value=\"cats\">cats</option>\n                                    <option value=\"dogs\">dogs</option>\n                                </select>\n\n                                <label for=\"location\" class=\"form-label\" >Location</label>\n                                <select name=\"location\" class=\"mb-3 custom-select form-select\" id=\"location\">\n                                    <option selected>Select Location?</option>\n                                    <option value=\"california\">california</option>\n                                    <option value=\"colorado\">colorado</option>\n                                    <option value=\"new york\">new york</option>\n                                    <option value=\"oregon\">oregon</option>\n                                    <option value=\"arizona\">arizona</option>\n                                    <option value=\"hawaii\">hawaii</option>\n                                    <option value=\"montana\">montana</option>\n                                    <option value=\"spain\">spain</option>\n                                    <option value=\"nevada\">nevada</option>\n                                    <option value=\"illinois\">illinois</option>\n                                    <option value=\"vietnam\">vietnam</option>\n                                    <option value=\"ireland\">ireland</option>\n                                    <option value=\"louisiana\">louisiana</option>\n                                    <option value=\"michigan\">michigan</option>\n                                    <option value=\"united kingdom\">united kingdom</option>\n                                    <option value=\"massachusetts\">massachusetts</option>\n                                    <option value=\"north carolina\">north carolina</option>\n                                    <option value=\"idaho\">idaho</option>\n                                    <option value=\"mississippi\">mississippi</option>\n                                    <option value=\"new jersey\">new jersey</option>\n                                    <option value=\"florida\">florida</option>\n                                    <option value=\"minnesota\">minnesota</option>\n                                    <option value=\"georgia\">georgia</option>\n                                    <option value=\"utah\">utah</option>\n                                    <option value=\"washington\">washington</option>\n                                    <option value=\"west virginia\">west virginia</option>\n                                    <option value=\"connecticut\">connecticut</option>\n                                    <option value=\"tennessee\">tennessee</option>\n                                    <option value=\"rhode island\">rhode island</option>\n                                    <option value=\"district of columbia\">district of columbia</option>\n                                    <option value=\"canada\">canada</option>\n                                    <option value=\"missouri\">missouri</option>\n                                    <option value=\"germany\">germany</option>\n                                    <option value=\"pennsylvania\">pennsylvania</option>\n                                    <option value=\"netherlands\">netherlands</option>\n                                    <option value=\"switzerland\">switzerland</option>\n                                    <option value=\"ohio\">ohio</option>\n                                </select>\n\n                                <label for=\"speaks\" class=\"form-label\" >Which languages do you speak</label>\n                                <select name=\"speaks\" multiple class=\"mb-3 custom-select form-select\" id=\"speaks\">\n                                    <option selected>Select the languages you speak?</option>\n                                    <option value=\"lisp\">lisp</option>\n                                    <option value=\"hindi\">hindi</option>\n                                    <option value=\"ilongo\">ilongo</option>\n                                    <option value=\"tamil\">tamil</option>\n                                    <option value=\"welsh\">welsh</option>\n                                    <option value=\"latin\">latin</option>\n                                    <option value=\"icelandic\">icelandic</option>\n                                    <option value=\"indonesian\">indonesian</option>\n                                    <option value=\"belarusan\">belarusan</option>\n                                    <option value=\"chechen\">chechen</option>\n                                    <option value=\"arabic\">arabic</option>\n                                    <option value=\"signlanguage\">sign language</option>\n                                    <option value=\"mongolian\">mongolian</option>\n                                    <option value=\"russian\">russian</option>\n                                    <option value=\"catalan\">catalan</option>\n                                    <option value=\"dutch\">dutch</option>\n                                    <option value=\"serbian\">serbian</option>\n                                    <option value=\"italian\">italian</option>\n                                    <option value=\"ancientgreek\">ancient greek</option>\n                                    <option value=\"norwegian\">norwegian</option>\n                                    <option value=\"bengal\">bengal</option>\n                                    <option value=\"portuguese\">portuguese</option>\n                                    <option value=\"croatian\">croatian</option>\n                                    <option value=\"hawaiian\">hawaiian</option>\n                                    <option value=\"swahili\">swahili</option>\n                                    <option value=\"korean\">korean</option>\n                                    <option value=\"afrikaans\">afrikaans</option>\n                                    <option value=\"slovak\">slovak</option>\n                                    <option value=\"greek\">greek</option>\n                                    <option value=\"persian\">persian</option>\n                                    <option value=\"thai\">thai</option>\n                                    <option value=\"occitan\">occitan</option>\n                                    <option value=\"hebrew\">hebrew</option>\n                                    <option value=\"armenian\">armenian</option>\n                                    <option value=\"tibetan\">tibetan</option>\n                                    <option value=\"czech\">czech</option>\n                                    <option value=\"c++\">c++</option>\n                                    <option value=\"finnish\">finnish</option>\n                                    <option value=\"romanian\">romanian</option>\n                                    <option value=\"urdu\">urdu</option>\n                                    <option value=\"gujarati\">gujarati</option>\n                                    <option value=\"swedish\">swedish</option>\n                                    <option value=\"malay\">malay</option>\n                                    <option value=\"maori\">maori</option>\n                                    <option value=\"basque\">basque</option>\n                                    <option value=\"hungarian\">hungarian</option>\n                                    <option value=\"polish\">polish</option>\n                                    <option value=\"bulgarian\">bulgarian</option>\n                                    <option value=\"english\">english</option>\n                                    <option value=\"breton\">breton</option>\n                                    <option value=\"cebuano\">cebuano</option>\n                                    <option value=\"tagalog\">tagalog</option>\n                                    <option value=\"vietnamese\">vietnamese</option>\n                                    <option value=\"slovenian\">slovenian</option>\n                                    <option value=\"lithuania\">lithuania</option>\n                                    <option value=\"french\">french</option>\n                                    <option value=\"danish\">danish</option>\n                                    <option value=\"farsi\">farsi</option>\n                                    <option value=\"sardinian\">sardinian</option>\n                                    <option value=\"esperanto\">esperanto</option>\n                                    <option value=\"turkish\">turkish</option>\n                                    <option value=\"rotuman\">rotuman</option>\n                                    <option value=\"estonian\">estonian</option>\n                                    <option value=\"khmer\">khmer</option>\n                                    <option value=\"german\">german</option>\n                                    <option value=\"ukrainian\">ukrainian</option>\n                                    <option value=\"georgian\">georgian</option>\n                                    <option value=\"yiddish\">yiddish</option>\n                                    <option value=\"japanese\">japanese</option>\n                                    <option value=\"latvian\">latvian</option>\n                                    <option value=\"sanskrit\">sanskrit</option>\n                                    <option value=\"irish\">irish</option>\n                                    <option value=\"spanish\">spanish</option>\n                                    <option value=\"frisian\">frisian</option>\n                                    <option value=\"chinese\">chinese</option>\n                                    <option value=\"albanian\">albanian</option>\n                                </select>\n\n                                <label for=\"smokes\" class=\"form-label\">Smoke</label>\n                                <select name=\"smokes\" class=\"mb-3 custom-select form-select\" id=\"smokes\">\n                                    <option selected>Do you smoke?</option>\n                                    <option value=\"yes\">yes</option>\n                                    <option value=\"when drinking\">when drinking</option>\n                                    <option value=\"sometimes\">sometimes</option>\n                                    <option value=\"trying to quit\">trying to quit</option>\n                                    <option value=\"no\">no</option>\n                                </select>\n\n                                <label for=\"drinks\" class=\"form-label\" > Drinks</label>\n                                <select name=\"drinks\" class=\"mb-3 custom-select form-select\" id=\"drinks\">\n                                    <option selected>Do you drink?</option>\n                                    <option value=\"socially\">socially</option>\n                                    <option value=\"often\">often</option>\n                                    <option value=\"not at all\">not at all</option>\n                                    <option value=\"rarely\">rarely</option>\n                                    <option value=\"very often\">very often</option>\n                                    <option value=\"desperately\">desperately</option>\n                                </select>\n\n                                <label for=\"drugs\" class=\"form-label\"> Drugs</label>\n                                <select name=\"drugs\" class=\"mb-3 custom-select form-select\" id=\"drugs\">\n                                    <option selected>Do you indulge in other dugs?</option>\n                                    <option value=\"never\">never</option>\n                                    <option value=\"often\">often</option>\n                                    <option value=\"sometimes\">sometimes</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"justify-content-center my-flex\">\n                        <div class=\"v-flex\">\n                            <input class=\" w-fit btn btn-primary\" type=\"submit\" value=\"Register\" /><br />\n                            {message && <p className='message'>{message}</p>}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Register;","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\MyProfile.js",["78","79","80","81","82","83","84","85","86","87"],[],"import React, { useEffect } from 'react';\r\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\r\nimport { getUser, getUserByUsername } from './service/AuthService'\r\n\r\nconst MyProfile = () => {\r\n    const [uname, setUname] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    var user; \r\n    if(uname.get(\"uname\") == undefined)\r\n    {\r\n        user = getUser();\r\n    }\r\n    else\r\n    {\r\n        const users = JSON.parse(sessionStorage.getItem(\"recommendations\"));\r\n        var found = false;\r\n        for(var index in users)\r\n        {\r\n            var u = users[index];\r\n            if(u.username == uname.get(\"uname\"))\r\n            {\r\n                user = u;\r\n                found = true;\r\n                break;\r\n            } \r\n        }\r\n        if(!found)\r\n        {\r\n            // check searched users storage\r\n            const users = JSON.parse(sessionStorage.getItem(\"searchedusers\"));\r\n            var found = false;\r\n            for(var index in users)\r\n            {\r\n                var u = users[index];\r\n                if(u.username == uname.get(\"uname\"))\r\n                {\r\n                    user = u;\r\n                    found = true;\r\n                    break;\r\n                }    \r\n            }\r\n        }\r\n        // console.log(\"In get by username\");\r\n        // user = getUserByUsername(uname.get(\"uname\"));\r\n    }\r\n    // console.log(user)\r\n    const name = user !== 'undefined' && user ? user.name : '';\r\n    const username = user !== 'undefined' && user ? user.username : '';\r\n    const email = user !== 'undefined' && user ? user.email : '';\r\n    const age = user !== 'undefined' && user ? user.age : '';\r\n    const sex = user !== 'undefined' && user ? user.sex : '';\r\n    const orientation = user !== 'undefined' && user ? user.orientation : '';\r\n    const diet = user !== 'undefined' && user ? user.diet : '';\r\n    const drinks = user !== 'undefined' && user ? user.drinks : '';\r\n    const drugs = user !== 'undefined' && user ? user.drugs : '';\r\n    const education = user !== 'undefined' && user ? user.education : '';\r\n    const ethnicity = user !== 'undefined' && user ? user.ethnicity : '';\r\n    const income = user !== 'undefined' && user ? user.income : '';\r\n    const location = user !== 'undefined' && user ? user.location : '';\r\n    const pets = user !== 'undefined' && user ? user.pets : '';\r\n    const smokes = user !== 'undefined' && user ? user.smokes : '';\r\n    const speaks = user !== 'undefined' && user ? user.speaks : '';\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [user])\r\n\r\n    if (user) {\r\n        return (\r\n            <div>\r\n            <dl class=\"row\">\r\n                <dt class=\"col-sm-3\">Name</dt>\r\n                <dd class=\"col-sm-9\">{name}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Email</dt>\r\n                <dd class=\"col-sm-9\">{email}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Username</dt>\r\n                <dd class=\"col-sm-9\">{username}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Age</dt>\r\n                <dd class=\"col-sm-9\">{age}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Sex</dt>\r\n                <dd class=\"col-sm-9\">{sex}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Orientation</dt>\r\n                <dd class=\"col-sm-9\">{orientation}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Diet</dt>\r\n                <dd class=\"col-sm-9\">{diet}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Education</dt>\r\n                <dd class=\"col-sm-9\">{education}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Income</dt>\r\n                <dd class=\"col-sm-9\">{income}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Ethnicity</dt>\r\n                <dd class=\"col-sm-9\">{ethnicity}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Pets</dt>\r\n                <dd class=\"col-sm-9\">{pets}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Location</dt>\r\n                <dd class=\"col-sm-9\">{location}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Language</dt>\r\n                <dd class=\"col-sm-9\">{speaks}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Smokes</dt>\r\n                <dd class=\"col-sm-9\">{smokes}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Drinks</dt>\r\n                <dd class=\"col-sm-9\">{drinks}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Drugs</dt>\r\n                <dd class=\"col-sm-9\">{drugs}</dd>\r\n            </dl>\r\n            \r\n        </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyProfile\r\n","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\service\\AuthService.js",[],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\NotFound.js",[],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Friends.js",["88"],[],"import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { getUser, getUsers } from \"./service/AuthService\";\nimport axios from 'axios';\n\n// const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\nconst editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\n\nconst Friends = () => {\n    const navigate = useNavigate();\n    const [users, setUsers] = useState(getUsers())\n    const [user, setUser] = useState(getUser());\n    const [connections, setConnections] = useState([])\n    const [sent, setSent] = useState([])\n    const [received, setReceived] = useState([])\n    useEffect(() => {\n        if (!user) {\n            navigate(\"/login\")\n        } else {\n            let c = []\n            let s = []\n            let r = []\n            let f = user.friendlist;\n            for (let i = 0; i < f?.length; i++) {\n                if (f[i].request === \"accepted\") c.push({ name: f[i].name, username: f[i].username })\n                else if (f[i].status === \"received\" && f[i].request !== \"rejected\") r.push({ name: f[i].name, username: f[i].username })\n                else if (f[i].status === \"sent\" && f[i].request !== \"rejected\") s.push({ name: f[i].name, username: f[i].username })\n            }\n            setConnections(c)\n            setReceived(r)\n            setSent(s)\n        }\n    }, [user])\n\n    const handleAccept = (sender) => {\n        const requestBody = {\n            \"sender\": sender.username,\n            \"receiver\": user.username,\n            \"request\": \"accepted\"\n        }\n        axios.post(editUserUrl, requestBody).then(response => {\n            // sessionStorage.setItem('user', JSON.stringify(response.data));\n            // setUser(response.data)\n            let newUser = { ...user }\n            newUser.friendlist = newUser.friendlist.map((eachfriend) => {\n                if (eachfriend.username === sender.username) {\n                    eachfriend.request = \"accepted\"\n                }\n                return eachfriend\n            })\n            let newUsers = users.map((eachUser) => {\n                if (eachUser.username === sender.username) {\n                    eachUser.friendlist = eachUser.friendlist.map((friend) => {\n                        if (friend.username === user.username) {\n                            friend.request = \"accepted\"\n                        }\n                        return friend\n                    })\n                }\n                return eachUser\n            })\n            sessionStorage.setItem('user', JSON.stringify(newUser))\n            sessionStorage.setItem('recommendations', JSON.stringify(newUsers))\n            setUser(newUser)\n            setUsers(newUsers)\n            alert('Request Accepted');\n        }).catch(error => {\n            if (error.response.status === 401 || error.response.status === 403) {\n                alert(error.response.data.message);\n            } else {\n                alert('Backend server error');\n            }\n        })\n    }\n\n    const handleReject = (sender) => {\n        const requestBody = {\n            \"sender\": sender.username,\n            \"receiver\": user.username,\n            \"request\": \"rejected\"\n        }\n        axios.post(editUserUrl, requestBody).then(response => {\n            // sessionStorage.setItem('user', JSON.stringify(response.data));\n            // setUser(response.data)\n            let newUser = { ...user }\n            newUser.friendlist = newUser.friendlist.map((eachfriend) => {\n                if (eachfriend.username === sender.username) {\n                    eachfriend.request = \"rejected\"\n                }\n                return eachfriend\n            })\n            setUser(newUser)\n            sessionStorage.setItem('user', JSON.stringify(newUser))\n            let newUsers = users.map((eachUser) => {\n                if (eachUser.username === sender.username) {\n                    eachUser.friendlist = eachUser.friendlist.map((friend) => {\n                        if (friend.username === user.username) {\n                            friend.request = \"rejected\"\n                        }\n                        return friend\n                    })\n                }\n                return eachUser\n            })\n            setUsers(newUsers)\n            sessionStorage.setItem('recommendations', JSON.stringify(newUsers))\n            alert('Request Rejected');\n        }).catch(error => {\n            if (error.response.status === 401 || error.response.status === 403) {\n                alert(error.response.data.message);\n            } else {\n                alert('Backend server error');\n            }\n        })\n    }\n\n    if (user)\n        return (\n            <div>\n                <div>My Connections</div>\n                <ul>\n                    {connections?.map((fr) => {\n                        return <li key={fr.username}>{fr.name}</li>\n                    })}\n                </ul>\n                <div>Sent</div>\n                <ul>\n                    {sent?.map((fr) => {\n                        return <li key={fr.username}>{fr.name}</li>\n                    })}\n                </ul>\n                <div>Received</div>\n                <ul>\n                    {received?.map((fr) => {\n                        return <li key={fr.username} style={{ display: \"flex\" }}>\n                            <div>{fr.name}</div>\n                            <button onClick={() => handleAccept(fr)}>Accept</button>\n                            <button onClick={() => handleReject(fr)}>Reject</button>\n                        </li>\n                    })}\n                </ul>\n            </div>\n        )\n}\n\nexport default Friends",{"ruleId":"89","severity":1,"message":"90","line":12,"column":10,"nodeType":"91","messageId":"92","endLine":12,"endColumn":21},{"ruleId":"89","severity":1,"message":"93","line":19,"column":10,"nodeType":"91","messageId":"92","endLine":19,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":51,"column":34,"nodeType":"96","endLine":51,"endColumn":59},{"ruleId":"97","severity":1,"message":"98","line":15,"column":8,"nodeType":"99","endLine":15,"endColumn":14,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"101","line":149,"column":12,"nodeType":"91","messageId":"92","endLine":149,"endColumn":22},{"ruleId":"89","severity":1,"message":"102","line":149,"column":24,"nodeType":"91","messageId":"92","endLine":149,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":157,"column":8,"nodeType":"99","endLine":157,"endColumn":14,"suggestions":"103"},{"ruleId":"97","severity":1,"message":"104","line":158,"column":50,"nodeType":"99","endLine":158,"endColumn":52,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":166,"column":35,"nodeType":"108","messageId":"109","endLine":166,"endColumn":37},{"ruleId":"106","severity":1,"message":"110","line":211,"column":31,"nodeType":"108","messageId":"109","endLine":211,"endColumn":33},{"ruleId":"89","severity":1,"message":"111","line":257,"column":9,"nodeType":"91","messageId":"92","endLine":257,"endColumn":15},{"ruleId":"106","severity":1,"message":"110","line":287,"column":21,"nodeType":"108","messageId":"109","endLine":287,"endColumn":23},{"ruleId":"106","severity":1,"message":"110","line":298,"column":21,"nodeType":"108","messageId":"109","endLine":298,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":326,"column":35,"nodeType":"114","messageId":"115","endLine":326,"endColumn":37},{"ruleId":"106","severity":1,"message":"110","line":331,"column":28,"nodeType":"108","messageId":"109","endLine":331,"endColumn":30},{"ruleId":"106","severity":1,"message":"107","line":357,"column":78,"nodeType":"108","messageId":"109","endLine":357,"endColumn":80},{"ruleId":"97","severity":1,"message":"98","line":22,"column":8,"nodeType":"99","endLine":22,"endColumn":14,"suggestions":"116"},{"ruleId":"97","severity":1,"message":"98","line":23,"column":8,"nodeType":"99","endLine":23,"endColumn":14,"suggestions":"117"},{"ruleId":"89","severity":1,"message":"118","line":2,"column":23,"nodeType":"91","messageId":"92","endLine":2,"endColumn":32},{"ruleId":"89","severity":1,"message":"119","line":3,"column":19,"nodeType":"91","messageId":"92","endLine":3,"endColumn":36},{"ruleId":"89","severity":1,"message":"120","line":6,"column":19,"nodeType":"91","messageId":"92","endLine":6,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":9,"column":27,"nodeType":"108","messageId":"109","endLine":9,"endColumn":29},{"ruleId":"106","severity":1,"message":"107","line":20,"column":27,"nodeType":"108","messageId":"109","endLine":20,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":31,"column":17,"nodeType":"91","messageId":"123","endLine":31,"endColumn":22},{"ruleId":"121","severity":1,"message":"124","line":32,"column":21,"nodeType":"91","messageId":"123","endLine":32,"endColumn":26},{"ruleId":"121","severity":1,"message":"125","line":34,"column":21,"nodeType":"91","messageId":"123","endLine":34,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":35,"column":31,"nodeType":"108","messageId":"109","endLine":35,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":68,"column":8,"nodeType":"99","endLine":68,"endColumn":14,"suggestions":"126"},{"ruleId":"97","severity":1,"message":"98","line":33,"column":8,"nodeType":"99","endLine":33,"endColumn":14,"suggestions":"127"},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'isAuthenticating' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'searchUser' is assigned a value but never used.","'setSearchUser' is assigned a value but never used.",["129"],"React Hook React.useEffect has a missing dependency: 'loadRecommendations'. Either include it or remove the dependency array.",["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'number' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["131"],["132"],"'useParams' is defined but never used.","'getUserByUsername' is defined but never used.","'setUname' is assigned a value but never used.","no-redeclare","'found' is already defined.","redeclared","'index' is already defined.","'u' is already defined.",["133"],["134"],{"desc":"135","fix":"136"},{"desc":"135","fix":"137"},{"desc":"138","fix":"139"},{"desc":"135","fix":"140"},{"desc":"135","fix":"141"},{"desc":"135","fix":"142"},{"desc":"135","fix":"143"},"Update the dependencies array to be: [navigate, user]",{"range":"144","text":"145"},{"range":"146","text":"145"},"Update the dependencies array to be: [loadRecommendations]",{"range":"147","text":"148"},{"range":"149","text":"145"},{"range":"150","text":"145"},{"range":"151","text":"145"},{"range":"152","text":"145"},[479,485],"[navigate, user]",[6440,6446],[6498,6500],"[loadRecommendations]",[789,795],[818,824],[2614,2620],[1409,1415]]