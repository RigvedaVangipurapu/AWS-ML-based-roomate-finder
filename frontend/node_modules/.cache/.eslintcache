[{"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\index.js":"1","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\App.js":"2","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\PremiumContent.js":"3","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Home.js":"4","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Login.js":"5","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Register.js":"6","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\MyProfile.js":"7","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\service\\AuthService.js":"8","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\NotFound.js":"9","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Friends.js":"10","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Chat.js":"11"},{"size":254,"mtime":1671730507284,"results":"12","hashOfConfig":"13"},{"size":2735,"mtime":1671820630406,"results":"14","hashOfConfig":"13"},{"size":858,"mtime":1671161355359,"results":"15","hashOfConfig":"13"},{"size":16538,"mtime":1671817200807,"results":"16","hashOfConfig":"13"},{"size":2906,"mtime":1671758714973,"results":"17","hashOfConfig":"13"},{"size":20203,"mtime":1671736580626,"results":"18","hashOfConfig":"13"},{"size":4618,"mtime":1671762967831,"results":"19","hashOfConfig":"13"},{"size":1030,"mtime":1671772926046,"results":"20","hashOfConfig":"13"},{"size":131,"mtime":1671730507372,"results":"21","hashOfConfig":"13"},{"size":6276,"mtime":1671820500807,"results":"22","hashOfConfig":"13"},{"size":1605,"mtime":1671824884328,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n3brla",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\index.js",[],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\App.js",["64","65"],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\PremiumContent.js",["66"],[],"import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUser, resetUserSession } from './service/AuthService'\r\n\r\nconst PremiumContent = () => {\r\n    const navigate = useNavigate();\r\n    const user = getUser();\r\n    const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n    //If user not  authenticated, redirect them to login\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [user])\r\n    const logoutHandler = () => {\r\n        resetUserSession();\r\n        navigate('/login');\r\n    }\r\n    if (user) {\r\n        return (\r\n            <div>\r\n                Hello {name}! You have been logged in! <br />\r\n                <input type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PremiumContent;",[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Home.js",["67","68","69","70","71","72","73","74","75","76","77","78"],[],"// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { getUser, resetUserSession, getUsers } from './service/AuthService';\n// import axios from 'axios';\n\n// // const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\n// const editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\n\n// const Home = () => {\n//     const navigate = useNavigate();\n//     const user = getUser();\n//     const [users, setUsers] = useState(getUsers())\n//     // \n//     const [searchUser, setUser] = useState('');\n//     const name = user !== 'undefined' && user ? user.name : '';\n\n//     useEffect(() => {\n//         if (!user) {\n//             navigate(\"/login\")\n//         }\n//     }, [user])\n\n//     const logoutHandler = () => {\n//         resetUserSession();\n//         navigate('/login');\n//     }\n\n//     const submitHandler = (event) => {\n//         event.preventDefault();\n//         if (searchUser.trim() === '') {\n//             return;\n//         }\n//     }\n\n//     const handleClick = (receiver) => {\n//         const requestBody = {\n//             \"sender\": user.username,\n//             \"receiver\": receiver,\n//             \"request\": \"pending\"\n//         }\n//         axios.post(editUserUrl, requestBody).then(response => {\n//             sessionStorage.setItem('scanResult', JSON.stringify(response.data));\n//             const data = response.data;\n//             for (let i = 0; i < data.length; i++) {\n//                 if (data[i].username === user.username) {\n//                     sessionStorage.setItem('user', JSON.stringify(data[i]));\n//                     break\n//                 }\n//             }\n//             setUsers(response.data)\n//             alert('Request sent succesfully');\n//         }).catch(error => {\n//             if (error.response.status === 401 || error.response.status === 403) {\n//                 alert(error.response.data.message);\n//             } else {\n//                 alert('Backend server error');\n//             }\n//         })\n//     }\n\n//     const checkSent = (friends) => {\n//         for (let i = 0; i < friends.length; i++) {\n//             if (friends[i].name === user.username && friends[i].status === \"received\") {\n//                 return true\n//             }\n//         }\n//         return false\n//     }\n\n//     const checkReceived = (friends) => {\n//         for (let i = 0; i < friends.length; i++) {\n//             if (friends[i].name === user.username && friends[i].status === \"sent\") {\n//                 return true\n//             }\n//         }\n//         return false\n//     }\n\n//     if (user) {\n//         return (\n//             <div>\n\n//                 <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n//                 <strong>Hello {name}!</strong> You have been logged in.\n//                 <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n//                 </div>\n\n//                 <form onSubmit={submitHandler}>\n//                     <div class=\"input-group mb-3\">\n//                         <input type=\"text\" value={searchUser} onChange={event => setUser(event.target.value)} class=\"form-control\" placeholder=\"Search a user directly..\" aria-label=\"Search text\" aria-describedby=\"button-search\"/>\n//                         <button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-search\">Search</button>\n//                     </div>\n//                 </form>\n\n//                 <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\n\n//                 <ul>\n//                     {users.filter((u) => {\n//                         let fr = user.friendlist;\n//                         let found = false;\n//                         for (let i = 0; i < fr.length; i++) {\n//                             if (fr[i].name === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\n//                                 found = true\n//                             }\n//                         }\n//                         if (u.username === user.username) {\n//                             found = true\n//                         }\n//                         if (!found) return u\n//                     }).map((receiver) => {\n//                         return <li key={receiver.username} style={{ display: \"flex\" }}>\n//                             <div>\n//                                 {receiver.username}\n//                             </div>\n//                             {checkSent(receiver.friendlist) ?\n//                                 <button disabled>Sent</button> :\n//                                 checkReceived(receiver.friendlist) ?\n//                                     <button disabled>Received Request</button> :\n//                                     <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\n\n//                             }\n\n//                         </li>\n//                     })}\n//                 </ul>\n//                 <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\n//             </div>\n//         )\n//     }\n// }\n\n// export default Home;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUser, resetUserSession, getUsers } from './service/AuthService';\nimport axios from 'axios';\n\nconst getRecommendations = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/home\";\n// const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\nconst editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\nvar searchUsers = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/search\";\nconst Home = () => {\n    const navigate = useNavigate();\n    const [user, setUser] = useState(getUser());\n    //TODO: Commented this line\n    var [users, setUsers] = useState(getUsers())\n    // console.log(\"Users:\", users)\n    const [searchUser, setSearchUser] = useState('');\n    const name = user !== 'undefined' && user ? user.name : '';\n\n\n    useEffect(() => {\n        if (!user) {\n            navigate(\"/login\")\n        }\n    }, [user])\n    React.useEffect(() => loadRecommendations(), [])\n    const logoutHandler = () => {\n        resetUserSession();\n        navigate('/login');\n    }\n\n    const loadRecommendations = (event) => {\n        const loadedRecommendations = JSON.parse(sessionStorage.getItem('recommendations'));\n        if (loadedRecommendations == undefined && user) {\n            console.log(\"In load recommendations \\n\");\n            const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\n            console.log(\"Logged in user is \\n\");\n            console.log(loggedInUser);\n            var jsonData = {};\n            jsonData['age'] = parseInt(loggedInUser['age']);\n            jsonData['sex'] = loggedInUser['sex'];\n            jsonData['orientation'] = loggedInUser['orientation'];\n            jsonData['diet'] = loggedInUser['diet'];\n            jsonData['drinks'] = loggedInUser['drinks'];\n            jsonData['drugs'] = loggedInUser['drugs'];\n            jsonData['ethnicity'] = loggedInUser['ethnicity'];\n            jsonData['income'] = loggedInUser['income'];\n            jsonData['location'] = loggedInUser['location'];\n            jsonData['pets'] = loggedInUser['pets'];\n            jsonData['smokes'] = loggedInUser['smokes'];\n            jsonData['speaks'] = loggedInUser['speaks'];\n            console.log(\"Json data is\\n\");\n            console.log(jsonData);\n            axios.post(getRecommendations, jsonData).then(response => {\n                console.log(response.data.recommendations);\n                sessionStorage.setItem(\"recommendations\", JSON.stringify(response.data.recommendations));\n                setUsers(response.data.recommendations);\n            });\n        }\n        else {\n            setUsers(loadedRecommendations);\n        }\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        var key = document.getElementById(\"key\").value;\n        var value = document.getElementById(\"value\").value;\n        // TODO: Make a call to the /search API\n\n        // if (searchUser.trim() === '') {\n        //     return;\n        // }\n        console.log(\"Url for search is \", searchUsers + \"?\" + key + \"=\" + value);\n        axios.get(searchUsers + \"?\" + key + \"=\" + value).then((response) => {\n            console.log(\"Search users response is\\n\");\n            console.log(response);\n            var arr = [];\n            if (response.data != undefined) {\n                var loadedRecommendations = JSON.parse(sessionStorage.getItem('searchedusers'));\n                if (loadedRecommendations == null) {\n                    loadedRecommendations = [];\n                }\n                loadedRecommendations.push(response.data);\n                sessionStorage.setItem(\"searchedusers\", JSON.stringify(loadedRecommendations));\n                arr.push(response.data);\n                setUsers(arr);\n            }\n            else {\n                alert(\"No users with the given username found\");\n            }\n        })\n        /* const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\n        console.log(\"Logged in user is \\n\");\n        console.log(loggedInUser);\n        var jsonData = {};\n            jsonData['age'] = parseInt(loggedInUser['age']);\n            jsonData['sex']= loggedInUser['sex'];\n            jsonData['orientation']= loggedInUser['orientation'];\n            jsonData['diet']= loggedInUser['diet'];\n            jsonData['drinks']= loggedInUser['drinks'];\n            jsonData['drugs']= loggedInUser['drugs'];\n            jsonData['ethnicity']= loggedInUser['ethnicity'];\n            jsonData['income']= loggedInUser['income'];\n            jsonData['location']= loggedInUser['location'];\n            jsonData['pets']= loggedInUser['pets'];\n            jsonData['smokes']= loggedInUser['smokes'];\n            jsonData['speaks']= loggedInUser['speaks'];\n            console.log(\"Json data is\\n\");\n            console.log(jsonData);\n            axios.post(getRecommendations, jsonData).then(response => {\n                // TODO: Attach the response to the users that are displayed in the page\n                for(var index in response.data.recommendations)\n                {\n                    var recommendation = response.data.recommendations[index];\n                    console.log(recommendation['friendlist'])\n                    recommendation['friendlist'] = recommendation['friendlist'].replace(/'/g, '\"');\n                    recommendation['friendlist'] = JSON.parse(recommendation['friendlist']);\n                }\n                console.log(response.data.recommendations);\n                setUsers(response.data.recommendations);\n                \n            }); */\n    }\n    let number = 0;\n    const handleClick = (receiver) => {\n        const requestBody = {\n            \"sender\": user.username,\n            \"receiver\": receiver,\n            \"request\": \"pending\"\n        }\n        axios.post(editUserUrl, requestBody).then(response => {\n            console.log(response);\n            sessionStorage.setItem('user', JSON.stringify(response.data));\n            setUser(response.data)\n            let newUsers = users.map((eachUser) => {\n                if (eachUser.username === receiver) {\n                    eachUser.friendlist.push({ name: user.name, username: user.username, request: \"pending\", status: \"received\" })\n                }\n                return eachUser\n            })\n            setUsers(newUsers)\n            sessionStorage.setItem('recommendations', JSON.stringify(newUsers));\n            alert('Request sent succesfully');\n        }).catch(error => {\n            if (error.response.status === 401 || error.response.status === 403) {\n                alert(error.response.data.message);\n            } else {\n                alert('Backend server error');\n            }\n        })\n    }\n\n    const checkSent = (friends) => {\n        if (friends != undefined) {\n            for (let i = 0; i < friends.length; i++) {\n                if (friends[i].username === user.username && friends[i].status === \"received\") {\n                    return true\n                }\n            }\n        }\n        return false\n    }\n\n    const checkReceived = (friends) => {\n        if (friends != undefined) {\n            for (let i = 0; i < friends.length; i++) {\n                if (friends[i].username === user.username && friends[i].status === \"sent\") {\n                    return true\n                }\n            }\n        }\n        return false\n    }\n\n    if (user && users) {\n        return (\n            <div class=\"mb-5\">\n\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                    <strong>Hello {name}!</strong> You have been logged in.\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n\n                <form onSubmit={submitHandler}>\n                     <div class=\"input-group mb-3\">\n                        <label class=\"input-group-text\" for=\"key\">Search By</label>\n                        <select class=\"form-select mybasis\" id=\"key\" name=\"By\">\n                            <option value=\"username\" selected>Username</option>\n                            {/* <option value=\"1\">One</option>\n                            <option value=\"2\">Two</option>\n                            <option value=\"3\">Three</option> */}\n                        </select>\n                        <input type=\"text\" name=\"Value\" id=\"value\" class=\"form-control\" placeholder=\"Search..\" />\n                        <button class=\"btn btn-outline-secondary\"  value=\"Search\" type=\"submit\" id=\"button-search\">Search</button>\n                     </div>\n                 </form>\n\n                <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\n                <div class=\"mycontainer\">\n                {users.filter((u) => {\n                    let fr = user.friendlist;\n                    let found = false;\n                    console.log(\"Friendlist is \\n\");\n                    console.log(fr);\n                    if (fr != undefined) {\n                        for (let i = 0; i < fr.length; i++) {\n                            if (fr[i].username === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\n                                found = true\n                            }\n                        }\n                    }\n                    if (u.username === user.username) {\n                        found = true\n                    }\n                    if (!found) return u\n                }).map((receiver) => {\n                    number += 1;\n                    var link = \"my-profile?uname=\" + receiver.username;\n                    return <div class=\"col-5 myitems\">\n                        {/* <div class=\"col-sm-6\"> */}\n                            <div class=\"card \">\n                            <div class=\"card-body\">\n                                <h5 class=\"card-title\">{receiver.name} ( <a href={link}>{receiver.username}</a> )</h5>\n                                <p class=\"card-text\">{receiver.location}<br/>{receiver.sex == \"m\" ? \"Male\" : \"Female\"}</p>\n\n                                {checkSent(receiver.friendlist) ?\n                                            <button class=\"btn btn-outline-primary\" disabled>Sent</button> :\n                                            checkReceived(receiver.friendlist) ?\n                                                <button class=\"btn btn-outline-primary\" disabled>Received Request</button> :\n                                                <button class=\"btn btn-outline-primary\" onClick={() => handleClick(receiver.username)}>Add Friend</button>\n                                        }\n\n                            </div>\n                            </div>\n                    </div>\n                })}\n                </div>\n                <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\n            </div>\n        )\n    } else {\n        return <div class=\"d-flex align-items-center\">\n        <strong>Loading your Recommendations...</strong>\n        <div class=\"spinner-border ml-20\" role=\"status\" aria-hidden=\"true\"></div>\n      </div>\n    }\n}\n\nexport default Home;\n",[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Login.js",["79"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserSession } from './service/AuthService';\nimport { getUser } from './service/AuthService'\nimport axios from 'axios';\n\n// const loginUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/login\";\nconst loginUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/login\"\n\nconst Login = (props) => {\n    const navigate = useNavigate();\n    const user = getUser();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    //If user authenticated, redirect them\n    useEffect(() => {\n        if (user) {\n            navigate(\"/\")\n        }\n    }, [user])\n\n    // If user not authenticated, show them login form\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if (username.trim() === '' || password.trim() === '') {\n            setErrorMessage('All fields required');\n            return;\n        }\n\n        setErrorMessage(null);\n        const requestBody = {\n            username: username,\n            password: password\n        }\n        axios.post(loginUrl, requestBody).then((response) => {\n            console.log(response.data.scanResult);\n            if (response.data.user.friendList === \"[]\") response.data.user.friendlist = []\n            setUserSession(response.data.user, response.data.token, response.data.scanResult);\n            // props.history.push('/premium-content');\n            navigate('/');\n            console.log(\"Logged in\")\n        }).catch((error) => {\n            // console.log(error)\n            if (error.response.status === 401 || error.response.status === 403) {\n                setErrorMessage(error.response.data.message);\n            } else {\n                setErrorMessage('Backend server error');\n            }\n        })\n    }\n\n    return (\n        <div>\n            <form class=\"w-80\" onSubmit={submitHandler}>\n                <h3 class=\"mb-30\">Login</h3>\n\n                <div class=\"w-50 mb-3\">\n                    <label for=\"username\" class=\"form-label\">Username</label>\n                    <input placeholder=\"Enter your username\" id=\"username\" type=\"text\" class=\"form-control\" required value={username} onChange={event => setUsername(event.target.value)} /> <br />\n                    <label for=\"password\" class=\"form-label\">Password</label>\n                    <input placeholder=\"Enter your password\" id=\"password\" type=\"password\" class=\"form-control\" required value={password} onChange={event => setPassword(event.target.value)} /> <br />\n                    <input class=\" btn btn-primary\" type=\"submit\" value=\"Login\" />\n                </div>\n            </form>\n\n            {errorMessage && <p class=\"message\"> {errorMessage} </p>}\n        </div>\n    )\n}\n\nexport default Login;","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Register.js",["80"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUser } from './service/AuthService'\nimport axios from 'axios';\n\n// const registerUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/register\"\nconst registerUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/register\"\n\nconst Register = () => {\n    const navigate = useNavigate();\n    const user = getUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    //If user authenticated, redirect them\n    useEffect(() => {\n        if (user) {\n            navigate(\"/\")\n        }\n    }, [user])\n\n    const submitHandler = (event) => {\n\n        const isEmpty = (element) => {\n            return (!element.value.trim() || element.value.trim() === \"\")\n        }\n\n        event.preventDefault();\n        if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n            setMessage('All fields required');\n            return;\n        }\n        for (let ele of event.target.elements) {\n            if (isEmpty(ele)) {\n                setMessage('All fields required')\n                return;\n            }\n        }\n\n\n        setMessage(null);\n        const requestBody = {\n            username: username,\n            email: email,\n            name: name,\n            password: password,\n        }\n        for (let ele of event.target.elements) {\n            if (ele.name !== \"\") {\n                requestBody[ele.name] = ele.value\n            }\n        }\n        axios.post(registerUrl, requestBody).then(response => {\n            setMessage('Registeration succesful');\n        }).catch(error => {\n            if (error.response.status === 401 || error.response.status === 403) {\n                setMessage(error.response.data.message);\n            } else {\n                setMessage('Backend server error');\n            }\n        })\n    }\n\n    return (\n        <div>\n            <form onSubmit={submitHandler}>\n                <h3 class=\"mb-30\">Register</h3>\n\n                <div class=\"container\">\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-5\" >\n                            <div class=\"mb-3\">\n                                <label for=\"name\" class=\"form-label\">Name</label>\n                                <input placeholder=\"Enter your name\" id=\"name\" type=\"text\" class=\"form-control\" required value={name} onChange={event => setName(event.target.value)} /> <br />\n                                <label for=\"email\" class=\"form-label\">Email</label>\n                                <input placeholder=\"Enter your email\" id=\"email\" type=\"email\" class=\"form-control\" required value={email} onChange={event => setEmail(event.target.value)} /> <br />\n                                <label for=\"username\" class=\"form-label\">Username</label>\n                                <input placeholder=\"Enter your username\" id=\"username\" type=\"text\" class=\"form-control\" required value={username} onChange={event => setUsername(event.target.value)} /> <br />\n                                <label for=\"password\" class=\"form-label\">Password</label>\n                                <input placeholder=\"Enter your password\" id=\"password\" type=\"password\" class=\"form-control\" required value={password} onChange={event => setPassword(event.target.value)} /> <br />\n\n                                <label for=\"age\" class=\"form-label\">Age</label>\n                                <input placeholder=\"Enter your age\" name='age' id=\"age\" type=\"number\" class=\"form-control\" required /> <br />\n\n                                {/* <fieldset> */}\n                                <label for=\"sex\" class=\"form-label\">Sex</label>\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" name=\"sex\" class=\"form-check-input\" id=\"sexmale\" />\n                                    <label class=\"form-check-label\" for=\"sexmale\">Male</label>\n                                </div>\n                                <div class=\"mb-3 form-check\">\n                                    <input type=\"radio\" name=\"sex\" class=\"form-check-input\" id=\"sexfemale\" />\n                                    <label class=\"form-check-label\" for=\"sexfemale\">Female</label>\n                                </div>\n                                {/* </fieldset> */}\n\n                                <label for=\"orientation\" class=\"form-label\">Orientation</label>\n                                <select name=\"orientation\" class=\"mb-3 custom-select form-select\" id=\"orientation\">\n                                    <option selected>Select your sexual orientation</option>\n                                    <option value=\"straight\">straight</option>\n                                    <option value=\"bisexual\">bisexual</option>\n                                    <option value=\"gay\">gay</option>\n                                </select>\n\n                                <label for=\"diet\" class=\"form-label\" > Diet</label>\n                                <select name=\"diet\" class=\"mb-3 custom-select form-select\" id=\"diet\">\n                                    <option selected>Select your diet type</option>\n                                    <option value=\"vegetarian\">vegetarian</option>\n                                    <option value=\"vegan\">vegan</option>\n                                    <option value=\"halal\">halal</option>\n                                    <option value=\"kosher\">kosher</option>\n                                    <option value=\"anything\">anything</option>\n                                    <option value=\"other\">other</option>\n                                </select>\n\n                                <label for=\"education\" class=\"form-label\">Education</label>\n                                <input placeholder=\"Enter your education details\" name='education' id=\"education\" type=\"text\" class=\"form-control\" required /> <br />\n\n                                <label for=\"income\" class=\"form-label\">Income</label>\n                                <input placeholder=\"Enter your approx income\" name='income' id=\"income\" type=\"text\" class=\"form-control\" required /> <br />\n\n                            </div>\n                        </div>\n                        <div class=\"col-5\" >\n                            <div class=\"mb-3\">\n                                <label for=\"ethnicity\" class=\"form-label\" >Ethnicity</label>\n                                <select name=\"ethnicity\" multiple class=\"mb-3 custom-select form-select\" id=\"ethnicity\">\n                                    <option selected>Which ethnicity do you belong to?</option>\n                                    <option value=\"asian\">Asian</option>\n                                    <option value=\"white\">White</option>\n                                    <option value=\"black\">Black</option>\n                                    <option value=\"hispanic/latin\">Hispanic/Latino</option>\n                                    <option value=\"indian\">Indian</option>\n                                    <option value=\"pacificislander\">Pacific Islander</option>\n                                    <option value=\"middleeastern\">Middle Eastern</option>\n                                    <option value=\"nativeamerican\">Native American</option>\n                                </select>\n\n                                <label for=\"pets\" class=\"form-label\"> pets</label>\n                                <select name=\"pets\" multiple class=\"mb-3 custom-select form-select\" id=\"pets\">\n                                    <option selected>Do you own any pets?</option>\n                                    <option value=\"cats\">cats</option>\n                                    <option value=\"dogs\">dogs</option>\n                                </select>\n\n                                <label for=\"location\" class=\"form-label\" >Location</label>\n                                <select name=\"location\" class=\"mb-3 custom-select form-select\" id=\"location\">\n                                    <option selected>Select Location?</option>\n                                    <option value=\"california\">california</option>\n                                    <option value=\"colorado\">colorado</option>\n                                    <option value=\"new york\">new york</option>\n                                    <option value=\"oregon\">oregon</option>\n                                    <option value=\"arizona\">arizona</option>\n                                    <option value=\"hawaii\">hawaii</option>\n                                    <option value=\"montana\">montana</option>\n                                    <option value=\"spain\">spain</option>\n                                    <option value=\"nevada\">nevada</option>\n                                    <option value=\"illinois\">illinois</option>\n                                    <option value=\"vietnam\">vietnam</option>\n                                    <option value=\"ireland\">ireland</option>\n                                    <option value=\"louisiana\">louisiana</option>\n                                    <option value=\"michigan\">michigan</option>\n                                    <option value=\"united kingdom\">united kingdom</option>\n                                    <option value=\"massachusetts\">massachusetts</option>\n                                    <option value=\"north carolina\">north carolina</option>\n                                    <option value=\"idaho\">idaho</option>\n                                    <option value=\"mississippi\">mississippi</option>\n                                    <option value=\"new jersey\">new jersey</option>\n                                    <option value=\"florida\">florida</option>\n                                    <option value=\"minnesota\">minnesota</option>\n                                    <option value=\"georgia\">georgia</option>\n                                    <option value=\"utah\">utah</option>\n                                    <option value=\"washington\">washington</option>\n                                    <option value=\"west virginia\">west virginia</option>\n                                    <option value=\"connecticut\">connecticut</option>\n                                    <option value=\"tennessee\">tennessee</option>\n                                    <option value=\"rhode island\">rhode island</option>\n                                    <option value=\"district of columbia\">district of columbia</option>\n                                    <option value=\"canada\">canada</option>\n                                    <option value=\"missouri\">missouri</option>\n                                    <option value=\"germany\">germany</option>\n                                    <option value=\"pennsylvania\">pennsylvania</option>\n                                    <option value=\"netherlands\">netherlands</option>\n                                    <option value=\"switzerland\">switzerland</option>\n                                    <option value=\"ohio\">ohio</option>\n                                </select>\n\n                                <label for=\"speaks\" class=\"form-label\" >Which languages do you speak</label>\n                                <select name=\"speaks\" multiple class=\"mb-3 custom-select form-select\" id=\"speaks\">\n                                    <option selected>Select the languages you speak?</option>\n                                    <option value=\"lisp\">lisp</option>\n                                    <option value=\"hindi\">hindi</option>\n                                    <option value=\"ilongo\">ilongo</option>\n                                    <option value=\"tamil\">tamil</option>\n                                    <option value=\"welsh\">welsh</option>\n                                    <option value=\"latin\">latin</option>\n                                    <option value=\"icelandic\">icelandic</option>\n                                    <option value=\"indonesian\">indonesian</option>\n                                    <option value=\"belarusan\">belarusan</option>\n                                    <option value=\"chechen\">chechen</option>\n                                    <option value=\"arabic\">arabic</option>\n                                    <option value=\"signlanguage\">sign language</option>\n                                    <option value=\"mongolian\">mongolian</option>\n                                    <option value=\"russian\">russian</option>\n                                    <option value=\"catalan\">catalan</option>\n                                    <option value=\"dutch\">dutch</option>\n                                    <option value=\"serbian\">serbian</option>\n                                    <option value=\"italian\">italian</option>\n                                    <option value=\"ancientgreek\">ancient greek</option>\n                                    <option value=\"norwegian\">norwegian</option>\n                                    <option value=\"bengal\">bengal</option>\n                                    <option value=\"portuguese\">portuguese</option>\n                                    <option value=\"croatian\">croatian</option>\n                                    <option value=\"hawaiian\">hawaiian</option>\n                                    <option value=\"swahili\">swahili</option>\n                                    <option value=\"korean\">korean</option>\n                                    <option value=\"afrikaans\">afrikaans</option>\n                                    <option value=\"slovak\">slovak</option>\n                                    <option value=\"greek\">greek</option>\n                                    <option value=\"persian\">persian</option>\n                                    <option value=\"thai\">thai</option>\n                                    <option value=\"occitan\">occitan</option>\n                                    <option value=\"hebrew\">hebrew</option>\n                                    <option value=\"armenian\">armenian</option>\n                                    <option value=\"tibetan\">tibetan</option>\n                                    <option value=\"czech\">czech</option>\n                                    <option value=\"c++\">c++</option>\n                                    <option value=\"finnish\">finnish</option>\n                                    <option value=\"romanian\">romanian</option>\n                                    <option value=\"urdu\">urdu</option>\n                                    <option value=\"gujarati\">gujarati</option>\n                                    <option value=\"swedish\">swedish</option>\n                                    <option value=\"malay\">malay</option>\n                                    <option value=\"maori\">maori</option>\n                                    <option value=\"basque\">basque</option>\n                                    <option value=\"hungarian\">hungarian</option>\n                                    <option value=\"polish\">polish</option>\n                                    <option value=\"bulgarian\">bulgarian</option>\n                                    <option value=\"english\">english</option>\n                                    <option value=\"breton\">breton</option>\n                                    <option value=\"cebuano\">cebuano</option>\n                                    <option value=\"tagalog\">tagalog</option>\n                                    <option value=\"vietnamese\">vietnamese</option>\n                                    <option value=\"slovenian\">slovenian</option>\n                                    <option value=\"lithuania\">lithuania</option>\n                                    <option value=\"french\">french</option>\n                                    <option value=\"danish\">danish</option>\n                                    <option value=\"farsi\">farsi</option>\n                                    <option value=\"sardinian\">sardinian</option>\n                                    <option value=\"esperanto\">esperanto</option>\n                                    <option value=\"turkish\">turkish</option>\n                                    <option value=\"rotuman\">rotuman</option>\n                                    <option value=\"estonian\">estonian</option>\n                                    <option value=\"khmer\">khmer</option>\n                                    <option value=\"german\">german</option>\n                                    <option value=\"ukrainian\">ukrainian</option>\n                                    <option value=\"georgian\">georgian</option>\n                                    <option value=\"yiddish\">yiddish</option>\n                                    <option value=\"japanese\">japanese</option>\n                                    <option value=\"latvian\">latvian</option>\n                                    <option value=\"sanskrit\">sanskrit</option>\n                                    <option value=\"irish\">irish</option>\n                                    <option value=\"spanish\">spanish</option>\n                                    <option value=\"frisian\">frisian</option>\n                                    <option value=\"chinese\">chinese</option>\n                                    <option value=\"albanian\">albanian</option>\n                                </select>\n\n                                <label for=\"smokes\" class=\"form-label\">Smoke</label>\n                                <select name=\"smokes\" class=\"mb-3 custom-select form-select\" id=\"smokes\">\n                                    <option selected>Do you smoke?</option>\n                                    <option value=\"yes\">yes</option>\n                                    <option value=\"when drinking\">when drinking</option>\n                                    <option value=\"sometimes\">sometimes</option>\n                                    <option value=\"trying to quit\">trying to quit</option>\n                                    <option value=\"no\">no</option>\n                                </select>\n\n                                <label for=\"drinks\" class=\"form-label\" > Drinks</label>\n                                <select name=\"drinks\" class=\"mb-3 custom-select form-select\" id=\"drinks\">\n                                    <option selected>Do you drink?</option>\n                                    <option value=\"socially\">socially</option>\n                                    <option value=\"often\">often</option>\n                                    <option value=\"not at all\">not at all</option>\n                                    <option value=\"rarely\">rarely</option>\n                                    <option value=\"very often\">very often</option>\n                                    <option value=\"desperately\">desperately</option>\n                                </select>\n\n                                <label for=\"drugs\" class=\"form-label\"> Drugs</label>\n                                <select name=\"drugs\" class=\"mb-3 custom-select form-select\" id=\"drugs\">\n                                    <option selected>Do you indulge in other dugs?</option>\n                                    <option value=\"never\">never</option>\n                                    <option value=\"often\">often</option>\n                                    <option value=\"sometimes\">sometimes</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"justify-content-center my-flex\">\n                        <div class=\"v-flex\">\n                            <input class=\" w-fit btn btn-primary\" type=\"submit\" value=\"Register\" /><br />\n                            {message && <p className='message'>{message}</p>}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Register;","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\MyProfile.js",["81","82","83","84","85","86","87","88","89","90"],[],"import React, { useEffect } from 'react';\r\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\r\nimport { getUser, getUserByUsername } from './service/AuthService'\r\n\r\nconst MyProfile = () => {\r\n    const [uname, setUname] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    var user; \r\n    if(uname.get(\"uname\") == undefined)\r\n    {\r\n        user = getUser();\r\n    }\r\n    else\r\n    {\r\n        const users = JSON.parse(sessionStorage.getItem(\"recommendations\"));\r\n        var found = false;\r\n        for(var index in users)\r\n        {\r\n            var u = users[index];\r\n            if(u.username == uname.get(\"uname\"))\r\n            {\r\n                user = u;\r\n                found = true;\r\n                break;\r\n            } \r\n        }\r\n        if(!found)\r\n        {\r\n            // check searched users storage\r\n            const users = JSON.parse(sessionStorage.getItem(\"searchedusers\"));\r\n            var found = false;\r\n            for(var index in users)\r\n            {\r\n                var u = users[index];\r\n                if(u.username == uname.get(\"uname\"))\r\n                {\r\n                    user = u;\r\n                    found = true;\r\n                    break;\r\n                }    \r\n            }\r\n        }\r\n        // console.log(\"In get by username\");\r\n        // user = getUserByUsername(uname.get(\"uname\"));\r\n    }\r\n    // console.log(user)\r\n    const name = user !== 'undefined' && user ? user.name : '';\r\n    const username = user !== 'undefined' && user ? user.username : '';\r\n    const email = user !== 'undefined' && user ? user.email : '';\r\n    const age = user !== 'undefined' && user ? user.age : '';\r\n    const sex = user !== 'undefined' && user ? user.sex : '';\r\n    const orientation = user !== 'undefined' && user ? user.orientation : '';\r\n    const diet = user !== 'undefined' && user ? user.diet : '';\r\n    const drinks = user !== 'undefined' && user ? user.drinks : '';\r\n    const drugs = user !== 'undefined' && user ? user.drugs : '';\r\n    const education = user !== 'undefined' && user ? user.education : '';\r\n    const ethnicity = user !== 'undefined' && user ? user.ethnicity : '';\r\n    const income = user !== 'undefined' && user ? user.income : '';\r\n    const location = user !== 'undefined' && user ? user.location : '';\r\n    const pets = user !== 'undefined' && user ? user.pets : '';\r\n    const smokes = user !== 'undefined' && user ? user.smokes : '';\r\n    const speaks = user !== 'undefined' && user ? user.speaks : '';\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [user])\r\n\r\n    if (user) {\r\n        return (\r\n            <div>\r\n            <dl class=\"row\">\r\n                <dt class=\"col-sm-3\">Name</dt>\r\n                <dd class=\"col-sm-9\">{name}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Email</dt>\r\n                <dd class=\"col-sm-9\">{email}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Username</dt>\r\n                <dd class=\"col-sm-9\">{username}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Age</dt>\r\n                <dd class=\"col-sm-9\">{age}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Sex</dt>\r\n                <dd class=\"col-sm-9\">{sex}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Orientation</dt>\r\n                <dd class=\"col-sm-9\">{orientation}</dd>\r\n\r\n                <dt class=\"col-sm-3\">Diet</dt>\r\n                <dd class=\"col-sm-9\">{diet}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Education</dt>\r\n                <dd class=\"col-sm-9\">{education}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Income</dt>\r\n                <dd class=\"col-sm-9\">{income}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Ethnicity</dt>\r\n                <dd class=\"col-sm-9\">{ethnicity}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Pets</dt>\r\n                <dd class=\"col-sm-9\">{pets}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Location</dt>\r\n                <dd class=\"col-sm-9\">{location}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Language</dt>\r\n                <dd class=\"col-sm-9\">{speaks}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Smokes</dt>\r\n                <dd class=\"col-sm-9\">{smokes}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Drinks</dt>\r\n                <dd class=\"col-sm-9\">{drinks}</dd>\r\n                \r\n                <dt class=\"col-sm-3\">Drugs</dt>\r\n                <dd class=\"col-sm-9\">{drugs}</dd>\r\n            </dl>\r\n            \r\n        </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyProfile\r\n","C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\service\\AuthService.js",[],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\NotFound.js",[],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Friends.js",["91"],[],"C:\\Users\\Ganesh\\Desktop\\AIO\\Masters\\NYU\\Fall 2022\\Cloud Computing\\aws-roommate-finder\\frontend\\src\\Chat.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":19,"column":10,"nodeType":"94","messageId":"95","endLine":19,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":51,"column":34,"nodeType":"98","endLine":51,"endColumn":59},{"ruleId":"99","severity":1,"message":"100","line":15,"column":8,"nodeType":"101","endLine":15,"endColumn":14,"suggestions":"102"},{"ruleId":"92","severity":1,"message":"103","line":149,"column":12,"nodeType":"94","messageId":"95","endLine":149,"endColumn":22},{"ruleId":"92","severity":1,"message":"104","line":149,"column":24,"nodeType":"94","messageId":"95","endLine":149,"endColumn":37},{"ruleId":"99","severity":1,"message":"100","line":157,"column":8,"nodeType":"101","endLine":157,"endColumn":14,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"106","line":158,"column":50,"nodeType":"101","endLine":158,"endColumn":52,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":166,"column":35,"nodeType":"110","messageId":"111","endLine":166,"endColumn":37},{"ruleId":"108","severity":1,"message":"112","line":211,"column":31,"nodeType":"110","messageId":"111","endLine":211,"endColumn":33},{"ruleId":"92","severity":1,"message":"113","line":257,"column":9,"nodeType":"94","messageId":"95","endLine":257,"endColumn":15},{"ruleId":"108","severity":1,"message":"112","line":287,"column":21,"nodeType":"110","messageId":"111","endLine":287,"endColumn":23},{"ruleId":"108","severity":1,"message":"112","line":298,"column":21,"nodeType":"110","messageId":"111","endLine":298,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":333,"column":35,"nodeType":"116","messageId":"117","endLine":333,"endColumn":37},{"ruleId":"108","severity":1,"message":"112","line":338,"column":28,"nodeType":"110","messageId":"111","endLine":338,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":357,"column":92,"nodeType":"110","messageId":"111","endLine":357,"endColumn":94},{"ruleId":"99","severity":1,"message":"100","line":22,"column":8,"nodeType":"101","endLine":22,"endColumn":14,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":8,"nodeType":"101","endLine":23,"endColumn":14,"suggestions":"119"},{"ruleId":"92","severity":1,"message":"120","line":2,"column":23,"nodeType":"94","messageId":"95","endLine":2,"endColumn":32},{"ruleId":"92","severity":1,"message":"121","line":3,"column":19,"nodeType":"94","messageId":"95","endLine":3,"endColumn":36},{"ruleId":"92","severity":1,"message":"122","line":6,"column":19,"nodeType":"94","messageId":"95","endLine":6,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":9,"column":27,"nodeType":"110","messageId":"111","endLine":9,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":20,"column":27,"nodeType":"110","messageId":"111","endLine":20,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":31,"column":17,"nodeType":"94","messageId":"125","endLine":31,"endColumn":22},{"ruleId":"123","severity":1,"message":"126","line":32,"column":21,"nodeType":"94","messageId":"125","endLine":32,"endColumn":26},{"ruleId":"123","severity":1,"message":"127","line":34,"column":21,"nodeType":"94","messageId":"125","endLine":34,"endColumn":22},{"ruleId":"108","severity":1,"message":"109","line":35,"column":31,"nodeType":"110","messageId":"111","endLine":35,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":68,"column":8,"nodeType":"101","endLine":68,"endColumn":14,"suggestions":"128"},{"ruleId":"99","severity":1,"message":"100","line":33,"column":8,"nodeType":"101","endLine":33,"endColumn":14,"suggestions":"129"},"no-unused-vars","'isAuthenticating' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'searchUser' is assigned a value but never used.","'setSearchUser' is assigned a value but never used.",["131"],"React Hook React.useEffect has a missing dependency: 'loadRecommendations'. Either include it or remove the dependency array.",["132"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'number' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["133"],["134"],"'useParams' is defined but never used.","'getUserByUsername' is defined but never used.","'setUname' is assigned a value but never used.","no-redeclare","'found' is already defined.","redeclared","'index' is already defined.","'u' is already defined.",["135"],["136"],{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},{"desc":"140","fix":"141"},{"desc":"137","fix":"142"},{"desc":"137","fix":"143"},{"desc":"137","fix":"144"},{"desc":"137","fix":"145"},"Update the dependencies array to be: [navigate, user]",{"range":"146","text":"147"},{"range":"148","text":"147"},"Update the dependencies array to be: [loadRecommendations]",{"range":"149","text":"150"},{"range":"151","text":"147"},{"range":"152","text":"147"},{"range":"153","text":"147"},{"range":"154","text":"147"},[479,485],"[navigate, user]",[6284,6290],[6341,6343],"[loadRecommendations]",[789,795],[818,824],[2614,2620],[1409,1415]]