{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ganesh\\\\Desktop\\\\AIO\\\\Masters\\\\NYU\\\\Fall 2022\\\\Cloud Computing\\\\aws-roommate-finder\\\\frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { getUser, resetUserSession, getUsers } from './service/AuthService';\n// import axios from 'axios';\n\n// // const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\n// const editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\n\n// const Home = () => {\n//     const navigate = useNavigate();\n//     const user = getUser();\n//     const [users, setUsers] = useState(getUsers())\n//     // \n//     const [searchUser, setUser] = useState('');\n//     const name = user !== 'undefined' && user ? user.name : '';\n\n//     useEffect(() => {\n//         if (!user) {\n//             navigate(\"/login\")\n//         }\n//     }, [user])\n\n//     const logoutHandler = () => {\n//         resetUserSession();\n//         navigate('/login');\n//     }\n\n//     const submitHandler = (event) => {\n//         event.preventDefault();\n//         if (searchUser.trim() === '') {\n//             return;\n//         }\n//     }\n\n//     const handleClick = (receiver) => {\n//         const requestBody = {\n//             \"sender\": user.username,\n//             \"receiver\": receiver,\n//             \"request\": \"pending\"\n//         }\n//         axios.post(editUserUrl, requestBody).then(response => {\n//             sessionStorage.setItem('scanResult', JSON.stringify(response.data));\n//             const data = response.data;\n//             for (let i = 0; i < data.length; i++) {\n//                 if (data[i].username === user.username) {\n//                     sessionStorage.setItem('user', JSON.stringify(data[i]));\n//                     break\n//                 }\n//             }\n//             setUsers(response.data)\n//             alert('Request sent succesfully');\n//         }).catch(error => {\n//             if (error.response.status === 401 || error.response.status === 403) {\n//                 alert(error.response.data.message);\n//             } else {\n//                 alert('Backend server error');\n//             }\n//         })\n//     }\n\n//     const checkSent = (friends) => {\n//         for (let i = 0; i < friends.length; i++) {\n//             if (friends[i].name === user.username && friends[i].status === \"received\") {\n//                 return true\n//             }\n//         }\n//         return false\n//     }\n\n//     const checkReceived = (friends) => {\n//         for (let i = 0; i < friends.length; i++) {\n//             if (friends[i].name === user.username && friends[i].status === \"sent\") {\n//                 return true\n//             }\n//         }\n//         return false\n//     }\n\n//     if (user) {\n//         return (\n//             <div>\n\n//                 <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n//                 <strong>Hello {name}!</strong> You have been logged in.\n//                 <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n//                 </div>\n\n//                 <form onSubmit={submitHandler}>\n//                     <div class=\"input-group mb-3\">\n//                         <input type=\"text\" value={searchUser} onChange={event => setUser(event.target.value)} class=\"form-control\" placeholder=\"Search a user directly..\" aria-label=\"Search text\" aria-describedby=\"button-search\"/>\n//                         <button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-search\">Search</button>\n//                     </div>\n//                 </form>\n\n//                 <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\n\n//                 <ul>\n//                     {users.filter((u) => {\n//                         let fr = user.friendlist;\n//                         let found = false;\n//                         for (let i = 0; i < fr.length; i++) {\n//                             if (fr[i].name === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\n//                                 found = true\n//                             }\n//                         }\n//                         if (u.username === user.username) {\n//                             found = true\n//                         }\n//                         if (!found) return u\n//                     }).map((receiver) => {\n//                         return <li key={receiver.username} style={{ display: \"flex\" }}>\n//                             <div>\n//                                 {receiver.username}\n//                             </div>\n//                             {checkSent(receiver.friendlist) ?\n//                                 <button disabled>Sent</button> :\n//                                 checkReceived(receiver.friendlist) ?\n//                                     <button disabled>Received Request</button> :\n//                                     <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\n\n//                             }\n\n//                         </li>\n//                     })}\n//                 </ul>\n//                 <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\n//             </div>\n//         )\n//     }\n// }\n\n// export default Home;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUser, resetUserSession, getUsers } from './service/AuthService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRecommendations = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/home\";\n// const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\nconst editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\";\nvar searchUsers = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/search\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(getUser());\n  //TODO: Commented this line\n  var [users, setUsers] = useState(getUsers());\n  // console.log(\"Users:\", users)\n  const [searchUser, setSearchUser] = useState('');\n  const name = user !== 'undefined' && user ? user.name : '';\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\");\n    }\n  }, [user]);\n  React.useEffect(() => loadRecommendations(), []);\n  const logoutHandler = () => {\n    resetUserSession();\n    navigate('/login');\n  };\n  const loadRecommendations = event => {\n    const loadedRecommendations = JSON.parse(sessionStorage.getItem('recommendations'));\n    if (loadedRecommendations == undefined && user) {\n      console.log(\"In load recommendations \\n\");\n      const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\n      console.log(\"Logged in user is \\n\");\n      console.log(loggedInUser);\n      var jsonData = {};\n      jsonData['age'] = parseInt(loggedInUser['age']);\n      jsonData['sex'] = loggedInUser['sex'];\n      jsonData['orientation'] = loggedInUser['orientation'];\n      jsonData['diet'] = loggedInUser['diet'];\n      jsonData['drinks'] = loggedInUser['drinks'];\n      jsonData['drugs'] = loggedInUser['drugs'];\n      jsonData['ethnicity'] = loggedInUser['ethnicity'];\n      jsonData['income'] = loggedInUser['income'];\n      jsonData['location'] = loggedInUser['location'];\n      jsonData['pets'] = loggedInUser['pets'];\n      jsonData['smokes'] = loggedInUser['smokes'];\n      jsonData['speaks'] = loggedInUser['speaks'];\n      console.log(\"Json data is\\n\");\n      console.log(jsonData);\n      axios.post(getRecommendations, jsonData).then(response => {\n        console.log(response.data.recommendations);\n        sessionStorage.setItem(\"recommendations\", JSON.stringify(response.data.recommendations));\n        setUsers(response.data.recommendations);\n      });\n    } else {\n      setUsers(loadedRecommendations);\n    }\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    var key = document.getElementById(\"key\").value;\n    var value = document.getElementById(\"value\").value;\n    // TODO: Make a call to the /search API\n\n    // if (searchUser.trim() === '') {\n    //     return;\n    // }\n    searchUsers = searchUsers + \"?\" + key + \"=\" + value;\n    console.log(\"Url for search is \", searchUsers);\n    axios.get(searchUsers).then(response => {\n      console.log(\"Search users response is\\n\");\n      console.log(response.data);\n      var arr = [];\n      if (response.data != undefined) {\n        var loadedRecommendations = JSON.parse(sessionStorage.getItem('searchedusers'));\n        if (loadedRecommendations == null) {\n          loadedRecommendations = [];\n        }\n        loadedRecommendations.push(response.data);\n        sessionStorage.setItem(\"searchedusers\", JSON.stringify(loadedRecommendations));\n        arr.push(response.data);\n        setUsers(arr);\n      } else {\n        alert(\"No users with the given username found\");\n      }\n    });\n    /* const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n    console.log(\"Logged in user is \\n\");\r\n    console.log(loggedInUser);\r\n    var jsonData = {};\r\n        jsonData['age'] = parseInt(loggedInUser['age']);\r\n        jsonData['sex']= loggedInUser['sex'];\r\n        jsonData['orientation']= loggedInUser['orientation'];\r\n        jsonData['diet']= loggedInUser['diet'];\r\n        jsonData['drinks']= loggedInUser['drinks'];\r\n        jsonData['drugs']= loggedInUser['drugs'];\r\n        jsonData['ethnicity']= loggedInUser['ethnicity'];\r\n        jsonData['income']= loggedInUser['income'];\r\n        jsonData['location']= loggedInUser['location'];\r\n        jsonData['pets']= loggedInUser['pets'];\r\n        jsonData['smokes']= loggedInUser['smokes'];\r\n        jsonData['speaks']= loggedInUser['speaks'];\r\n        console.log(\"Json data is\\n\");\r\n        console.log(jsonData);\r\n        axios.post(getRecommendations, jsonData).then(response => {\r\n            // TODO: Attach the response to the users that are displayed in the page\r\n            for(var index in response.data.recommendations)\r\n            {\r\n                var recommendation = response.data.recommendations[index];\r\n                console.log(recommendation['friendlist'])\r\n                recommendation['friendlist'] = recommendation['friendlist'].replace(/'/g, '\"');\r\n                recommendation['friendlist'] = JSON.parse(recommendation['friendlist']);\r\n            }\r\n            console.log(response.data.recommendations);\r\n            setUsers(response.data.recommendations);\r\n            \r\n        }); */\n  };\n\n  let number = 0;\n  const handleClick = receiver => {\n    const requestBody = {\n      \"sender\": user.username,\n      \"receiver\": receiver,\n      \"request\": \"pending\"\n    };\n    axios.post(editUserUrl, requestBody).then(response => {\n      console.log(response);\n      sessionStorage.setItem('user', JSON.stringify(response.data));\n      setUser(response.data);\n      let newUsers = users.map(eachUser => {\n        if (eachUser.username === receiver) {\n          eachUser.friendlist.push({\n            name: user.name,\n            username: user.username,\n            request: \"pending\",\n            status: \"received\"\n          });\n        }\n        return eachUser;\n      });\n      setUsers(newUsers);\n      sessionStorage.setItem('recommendations', JSON.stringify(newUsers));\n      alert('Request sent succesfully');\n    }).catch(error => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        alert(error.response.data.message);\n      } else {\n        alert('Backend server error');\n      }\n    });\n  };\n  const checkSent = friends => {\n    if (friends != undefined) {\n      for (let i = 0; i < friends.length; i++) {\n        if (friends[i].username === user.username && friends[i].status === \"received\") {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const checkReceived = friends => {\n    if (friends != undefined) {\n      for (let i = 0; i < friends.length; i++) {\n        if (friends[i].username === user.username && friends[i].status === \"sent\") {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  if (user && users) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-success alert-dismissible fade show\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Hello \", name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), \" You have been logged in.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn-close\",\n          \"data-bs-dismiss\": \"alert\",\n          \"aria-label\": \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"By\",\n          id: \"key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Value\",\n          id: \"value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"mb-30\",\n        children: \"Here are some recommendations for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this), users.filter(u => {\n        let fr = user.friendlist;\n        let found = false;\n        console.log(\"Friendlist is \\n\");\n        console.log(fr);\n        if (fr != undefined) {\n          for (let i = 0; i < fr.length; i++) {\n            if (fr[i].username === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\n              found = true;\n            }\n          }\n        }\n        if (u.username === user.username) {\n          found = true;\n        }\n        if (!found) return u;\n      }).map(receiver => {\n        number += 1;\n        var link = \"my-profile?uname=\" + receiver.username;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              float: \"right\",\n              width: \"45%\",\n              margin: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"5px\"\n                },\n                children: [receiver.name, \" ( \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: link,\n                  children: receiver.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 82\n                }, this), \" )\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"5px\"\n                },\n                children: receiver.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"5px\"\n                },\n                children: receiver.sex == \"m\" ? \"Male\" : \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: checkSent(receiver.friendlist) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: true,\n                  children: \"Sent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 41\n                }, this) : checkReceived(receiver.friendlist) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: true,\n                  children: \"Received Request\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleClick(receiver.username),\n                  children: \"Add Friend\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"btn btn-secondary\",\n        type: \"button\",\n        value: \"Logout\",\n        onClick: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Home, \"k98uuzFVWgrdeAq+mGnd8jpms3U=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getUser","resetUserSession","getUsers","axios","getRecommendations","editUserUrl","searchUsers","Home","navigate","user","setUser","users","setUsers","searchUser","setSearchUser","name","loadRecommendations","logoutHandler","event","loadedRecommendations","JSON","parse","sessionStorage","getItem","undefined","console","log","loggedInUser","jsonData","parseInt","post","then","response","data","recommendations","setItem","stringify","submitHandler","preventDefault","key","document","getElementById","value","get","arr","push","alert","number","handleClick","receiver","requestBody","username","newUsers","map","eachUser","friendlist","request","status","catch","error","message","checkSent","friends","i","length","checkReceived","filter","u","fr","found","link","float","width","margin","padding","location","sex"],"sources":["C:/Users/Ganesh/Desktop/AIO/Masters/NYU/Fall 2022/Cloud Computing/aws-roommate-finder/frontend/src/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { getUser, resetUserSession, getUsers } from './service/AuthService';\r\n// import axios from 'axios';\r\n\r\n// // const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\r\n// const editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\r\n\r\n// const Home = () => {\r\n//     const navigate = useNavigate();\r\n//     const user = getUser();\r\n//     const [users, setUsers] = useState(getUsers())\r\n//     // \r\n//     const [searchUser, setUser] = useState('');\r\n//     const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n//     useEffect(() => {\r\n//         if (!user) {\r\n//             navigate(\"/login\")\r\n//         }\r\n//     }, [user])\r\n\r\n//     const logoutHandler = () => {\r\n//         resetUserSession();\r\n//         navigate('/login');\r\n//     }\r\n\r\n//     const submitHandler = (event) => {\r\n//         event.preventDefault();\r\n//         if (searchUser.trim() === '') {\r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     const handleClick = (receiver) => {\r\n//         const requestBody = {\r\n//             \"sender\": user.username,\r\n//             \"receiver\": receiver,\r\n//             \"request\": \"pending\"\r\n//         }\r\n//         axios.post(editUserUrl, requestBody).then(response => {\r\n//             sessionStorage.setItem('scanResult', JSON.stringify(response.data));\r\n//             const data = response.data;\r\n//             for (let i = 0; i < data.length; i++) {\r\n//                 if (data[i].username === user.username) {\r\n//                     sessionStorage.setItem('user', JSON.stringify(data[i]));\r\n//                     break\r\n//                 }\r\n//             }\r\n//             setUsers(response.data)\r\n//             alert('Request sent succesfully');\r\n//         }).catch(error => {\r\n//             if (error.response.status === 401 || error.response.status === 403) {\r\n//                 alert(error.response.data.message);\r\n//             } else {\r\n//                 alert('Backend server error');\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     const checkSent = (friends) => {\r\n//         for (let i = 0; i < friends.length; i++) {\r\n//             if (friends[i].name === user.username && friends[i].status === \"received\") {\r\n//                 return true\r\n//             }\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n//     const checkReceived = (friends) => {\r\n//         for (let i = 0; i < friends.length; i++) {\r\n//             if (friends[i].name === user.username && friends[i].status === \"sent\") {\r\n//                 return true\r\n//             }\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n//     if (user) {\r\n//         return (\r\n//             <div>\r\n\r\n//                 <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n//                 <strong>Hello {name}!</strong> You have been logged in.\r\n//                 <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n//                 </div>\r\n\r\n//                 <form onSubmit={submitHandler}>\r\n//                     <div class=\"input-group mb-3\">\r\n//                         <input type=\"text\" value={searchUser} onChange={event => setUser(event.target.value)} class=\"form-control\" placeholder=\"Search a user directly..\" aria-label=\"Search text\" aria-describedby=\"button-search\"/>\r\n//                         <button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-search\">Search</button>\r\n//                     </div>\r\n//                 </form>\r\n\r\n//                 <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\r\n\r\n//                 <ul>\r\n//                     {users.filter((u) => {\r\n//                         let fr = user.friendlist;\r\n//                         let found = false;\r\n//                         for (let i = 0; i < fr.length; i++) {\r\n//                             if (fr[i].name === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\r\n//                                 found = true\r\n//                             }\r\n//                         }\r\n//                         if (u.username === user.username) {\r\n//                             found = true\r\n//                         }\r\n//                         if (!found) return u\r\n//                     }).map((receiver) => {\r\n//                         return <li key={receiver.username} style={{ display: \"flex\" }}>\r\n//                             <div>\r\n//                                 {receiver.username}\r\n//                             </div>\r\n//                             {checkSent(receiver.friendlist) ?\r\n//                                 <button disabled>Sent</button> :\r\n//                                 checkReceived(receiver.friendlist) ?\r\n//                                     <button disabled>Received Request</button> :\r\n//                                     <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\r\n\r\n//                             }\r\n\r\n//                         </li>\r\n//                     })}\r\n//                 </ul>\r\n//                 <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Home;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUser, resetUserSession, getUsers } from './service/AuthService';\r\nimport axios from 'axios';\r\n\r\nconst getRecommendations = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/home\";\r\n// const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\r\nconst editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\r\nvar searchUsers = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/search\";\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState(getUser());\r\n    //TODO: Commented this line\r\n    var [users, setUsers] = useState(getUsers())\r\n    // console.log(\"Users:\", users)\r\n    const [searchUser, setSearchUser] = useState('');\r\n    const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [user])\r\n    React.useEffect(() => loadRecommendations(), [])\r\n    const logoutHandler = () => {\r\n        resetUserSession();\r\n        navigate('/login');\r\n    }\r\n\r\n    const loadRecommendations = (event) => {\r\n        const loadedRecommendations = JSON.parse(sessionStorage.getItem('recommendations'));\r\n        if (loadedRecommendations == undefined && user) {\r\n            console.log(\"In load recommendations \\n\");\r\n            const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n            console.log(\"Logged in user is \\n\");\r\n            console.log(loggedInUser);\r\n            var jsonData = {};\r\n            jsonData['age'] = parseInt(loggedInUser['age']);\r\n            jsonData['sex'] = loggedInUser['sex'];\r\n            jsonData['orientation'] = loggedInUser['orientation'];\r\n            jsonData['diet'] = loggedInUser['diet'];\r\n            jsonData['drinks'] = loggedInUser['drinks'];\r\n            jsonData['drugs'] = loggedInUser['drugs'];\r\n            jsonData['ethnicity'] = loggedInUser['ethnicity'];\r\n            jsonData['income'] = loggedInUser['income'];\r\n            jsonData['location'] = loggedInUser['location'];\r\n            jsonData['pets'] = loggedInUser['pets'];\r\n            jsonData['smokes'] = loggedInUser['smokes'];\r\n            jsonData['speaks'] = loggedInUser['speaks'];\r\n            console.log(\"Json data is\\n\");\r\n            console.log(jsonData);\r\n            axios.post(getRecommendations, jsonData).then(response => {\r\n                console.log(response.data.recommendations);\r\n                sessionStorage.setItem(\"recommendations\", JSON.stringify(response.data.recommendations));\r\n                setUsers(response.data.recommendations);\r\n            });\r\n        }\r\n        else {\r\n            setUsers(loadedRecommendations);\r\n        }\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        var key = document.getElementById(\"key\").value;\r\n        var value = document.getElementById(\"value\").value;\r\n        // TODO: Make a call to the /search API\r\n\r\n        // if (searchUser.trim() === '') {\r\n        //     return;\r\n        // }\r\n        searchUsers = searchUsers + \"?\" + key + \"=\" + value;\r\n        console.log(\"Url for search is \", searchUsers);\r\n        axios.get(searchUsers).then((response) => {\r\n            console.log(\"Search users response is\\n\");\r\n            console.log(response.data);\r\n            var arr = [];\r\n            if (response.data != undefined) {\r\n                var loadedRecommendations = JSON.parse(sessionStorage.getItem('searchedusers'));\r\n                if (loadedRecommendations == null) {\r\n                    loadedRecommendations = [];\r\n                }\r\n                loadedRecommendations.push(response.data);\r\n                sessionStorage.setItem(\"searchedusers\", JSON.stringify(loadedRecommendations));\r\n                arr.push(response.data);\r\n                setUsers(arr);\r\n            }\r\n            else {\r\n                alert(\"No users with the given username found\");\r\n            }\r\n        })\r\n        /* const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n        console.log(\"Logged in user is \\n\");\r\n        console.log(loggedInUser);\r\n        var jsonData = {};\r\n            jsonData['age'] = parseInt(loggedInUser['age']);\r\n            jsonData['sex']= loggedInUser['sex'];\r\n            jsonData['orientation']= loggedInUser['orientation'];\r\n            jsonData['diet']= loggedInUser['diet'];\r\n            jsonData['drinks']= loggedInUser['drinks'];\r\n            jsonData['drugs']= loggedInUser['drugs'];\r\n            jsonData['ethnicity']= loggedInUser['ethnicity'];\r\n            jsonData['income']= loggedInUser['income'];\r\n            jsonData['location']= loggedInUser['location'];\r\n            jsonData['pets']= loggedInUser['pets'];\r\n            jsonData['smokes']= loggedInUser['smokes'];\r\n            jsonData['speaks']= loggedInUser['speaks'];\r\n            console.log(\"Json data is\\n\");\r\n            console.log(jsonData);\r\n            axios.post(getRecommendations, jsonData).then(response => {\r\n                // TODO: Attach the response to the users that are displayed in the page\r\n                for(var index in response.data.recommendations)\r\n                {\r\n                    var recommendation = response.data.recommendations[index];\r\n                    console.log(recommendation['friendlist'])\r\n                    recommendation['friendlist'] = recommendation['friendlist'].replace(/'/g, '\"');\r\n                    recommendation['friendlist'] = JSON.parse(recommendation['friendlist']);\r\n                }\r\n                console.log(response.data.recommendations);\r\n                setUsers(response.data.recommendations);\r\n                \r\n            }); */\r\n    }\r\n    let number = 0;\r\n    const handleClick = (receiver) => {\r\n        const requestBody = {\r\n            \"sender\": user.username,\r\n            \"receiver\": receiver,\r\n            \"request\": \"pending\"\r\n        }\r\n        axios.post(editUserUrl, requestBody).then(response => {\r\n            console.log(response);\r\n            sessionStorage.setItem('user', JSON.stringify(response.data));\r\n            setUser(response.data)\r\n            let newUsers = users.map((eachUser) => {\r\n                if (eachUser.username === receiver) {\r\n                    eachUser.friendlist.push({ name: user.name, username: user.username, request: \"pending\", status: \"received\" })\r\n                }\r\n                return eachUser\r\n            })\r\n            setUsers(newUsers)\r\n            sessionStorage.setItem('recommendations', JSON.stringify(newUsers));\r\n            alert('Request sent succesfully');\r\n        }).catch(error => {\r\n            if (error.response.status === 401 || error.response.status === 403) {\r\n                alert(error.response.data.message);\r\n            } else {\r\n                alert('Backend server error');\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkSent = (friends) => {\r\n        if (friends != undefined) {\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (friends[i].username === user.username && friends[i].status === \"received\") {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkReceived = (friends) => {\r\n        if (friends != undefined) {\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (friends[i].username === user.username && friends[i].status === \"sent\") {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    if (user && users) {\r\n        return (\r\n            <div>\r\n\r\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>Hello {name}!</strong> You have been logged in.\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                </div>\r\n\r\n                <form onSubmit={submitHandler}>\r\n                    <input type=\"text\" name=\"By\" id=\"key\" />\r\n                    <input type=\"text\" name=\"Value\" id=\"value\" />\r\n                    <input type=\"submit\" value=\"Search\" />\r\n                </form>\r\n\r\n                <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\r\n\r\n\r\n                {users.filter((u) => {\r\n                    let fr = user.friendlist;\r\n                    let found = false;\r\n                    console.log(\"Friendlist is \\n\");\r\n                    console.log(fr);\r\n                    if (fr != undefined) {\r\n                        for (let i = 0; i < fr.length; i++) {\r\n                            if (fr[i].username === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\r\n                                found = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (u.username === user.username) {\r\n                        found = true\r\n                    }\r\n                    if (!found) return u\r\n                }).map((receiver) => {\r\n                    number += 1;\r\n                    var link = \"my-profile?uname=\" + receiver.username;\r\n                    return <div>\r\n                        {/* <div>\r\n                                {receiver.username}\r\n                            </div> */}\r\n                        <table style={{ float: \"right\", width: \"45%\", margin: \"20px\" }}>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.name} ( <a href={link}>{receiver.username}</a> )</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.location}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.sex == \"m\" ? \"Male\" : \"Female\"}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    {checkSent(receiver.friendlist) ?\r\n                                        <button disabled>Sent</button> :\r\n                                        checkReceived(receiver.friendlist) ?\r\n                                            <button disabled>Received Request</button> :\r\n                                            <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                })}\r\n\r\n                <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}