{"ast":null,"code":"import _slicedToArray from\"C:/Users/Ganesh/Desktop/AIO/Masters/NYU/Fall 2022/Cloud Computing/aws-roommate-finder/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { getUser, resetUserSession, getUsers } from './service/AuthService';\n// import axios from 'axios';\n// // const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\n// const editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\n// const Home = () => {\n//     const navigate = useNavigate();\n//     const user = getUser();\n//     const [users, setUsers] = useState(getUsers())\n//     // \n//     const [searchUser, setUser] = useState('');\n//     const name = user !== 'undefined' && user ? user.name : '';\n//     useEffect(() => {\n//         if (!user) {\n//             navigate(\"/login\")\n//         }\n//     }, [user])\n//     const logoutHandler = () => {\n//         resetUserSession();\n//         navigate('/login');\n//     }\n//     const submitHandler = (event) => {\n//         event.preventDefault();\n//         if (searchUser.trim() === '') {\n//             return;\n//         }\n//     }\n//     const handleClick = (receiver) => {\n//         const requestBody = {\n//             \"sender\": user.username,\n//             \"receiver\": receiver,\n//             \"request\": \"pending\"\n//         }\n//         axios.post(editUserUrl, requestBody).then(response => {\n//             sessionStorage.setItem('scanResult', JSON.stringify(response.data));\n//             const data = response.data;\n//             for (let i = 0; i < data.length; i++) {\n//                 if (data[i].username === user.username) {\n//                     sessionStorage.setItem('user', JSON.stringify(data[i]));\n//                     break\n//                 }\n//             }\n//             setUsers(response.data)\n//             alert('Request sent succesfully');\n//         }).catch(error => {\n//             if (error.response.status === 401 || error.response.status === 403) {\n//                 alert(error.response.data.message);\n//             } else {\n//                 alert('Backend server error');\n//             }\n//         })\n//     }\n//     const checkSent = (friends) => {\n//         for (let i = 0; i < friends.length; i++) {\n//             if (friends[i].name === user.username && friends[i].status === \"received\") {\n//                 return true\n//             }\n//         }\n//         return false\n//     }\n//     const checkReceived = (friends) => {\n//         for (let i = 0; i < friends.length; i++) {\n//             if (friends[i].name === user.username && friends[i].status === \"sent\") {\n//                 return true\n//             }\n//         }\n//         return false\n//     }\n//     if (user) {\n//         return (\n//             <div>\n//                 <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n//                 <strong>Hello {name}!</strong> You have been logged in.\n//                 <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n//                 </div>\n//                 <form onSubmit={submitHandler}>\n//                     <div class=\"input-group mb-3\">\n//                         <input type=\"text\" value={searchUser} onChange={event => setUser(event.target.value)} class=\"form-control\" placeholder=\"Search a user directly..\" aria-label=\"Search text\" aria-describedby=\"button-search\"/>\n//                         <button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-search\">Search</button>\n//                     </div>\n//                 </form>\n//                 <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\n//                 <ul>\n//                     {users.filter((u) => {\n//                         let fr = user.friendlist;\n//                         let found = false;\n//                         for (let i = 0; i < fr.length; i++) {\n//                             if (fr[i].name === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\n//                                 found = true\n//                             }\n//                         }\n//                         if (u.username === user.username) {\n//                             found = true\n//                         }\n//                         if (!found) return u\n//                     }).map((receiver) => {\n//                         return <li key={receiver.username} style={{ display: \"flex\" }}>\n//                             <div>\n//                                 {receiver.username}\n//                             </div>\n//                             {checkSent(receiver.friendlist) ?\n//                                 <button disabled>Sent</button> :\n//                                 checkReceived(receiver.friendlist) ?\n//                                     <button disabled>Received Request</button> :\n//                                     <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\n//                             }\n//                         </li>\n//                     })}\n//                 </ul>\n//                 <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\n//             </div>\n//         )\n//     }\n// }\n// export default Home;\nimport React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{getUser,resetUserSession,getUsers}from'./service/AuthService';import axios from'axios';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var getRecommendations=\"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/home\";// const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\nvar editUserUrl=\"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\";var searchUsers=\"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/search\";var Home=function Home(){var navigate=useNavigate();var _useState=useState(getUser()),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];//TODO: Commented this line\nvar _useState3=useState(getUsers()),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];// console.log(\"Users:\", users)\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchUser=_useState6[0],setSearchUser=_useState6[1];var name=user!=='undefined'&&user?user.name:'';useEffect(function(){if(!user){navigate(\"/login\");}},[user]);React.useEffect(function(){return loadRecommendations();},[]);var logoutHandler=function logoutHandler(){resetUserSession();navigate('/login');};var loadRecommendations=function loadRecommendations(event){var loadedRecommendations=JSON.parse(sessionStorage.getItem('recommendations'));if(loadedRecommendations==undefined&&user){console.log(\"In load recommendations \\n\");var loggedInUser=JSON.parse(sessionStorage.getItem('user'));console.log(\"Logged in user is \\n\");console.log(loggedInUser);var jsonData={};jsonData['age']=parseInt(loggedInUser['age']);jsonData['sex']=loggedInUser['sex'];jsonData['orientation']=loggedInUser['orientation'];jsonData['diet']=loggedInUser['diet'];jsonData['drinks']=loggedInUser['drinks'];jsonData['drugs']=loggedInUser['drugs'];jsonData['ethnicity']=loggedInUser['ethnicity'];jsonData['income']=loggedInUser['income'];jsonData['location']=loggedInUser['location'];jsonData['pets']=loggedInUser['pets'];jsonData['smokes']=loggedInUser['smokes'];jsonData['speaks']=loggedInUser['speaks'];console.log(\"Json data is\\n\");console.log(jsonData);axios.post(getRecommendations,jsonData).then(function(response){console.log(response.data.recommendations);sessionStorage.setItem(\"recommendations\",JSON.stringify(response.data.recommendations));setUsers(response.data.recommendations);});}else{setUsers(loadedRecommendations);}};var submitHandler=function submitHandler(event){event.preventDefault();var key=document.getElementById(\"key\").value;var value=document.getElementById(\"value\").value;// TODO: Make a call to the /search API\n// if (searchUser.trim() === '') {\n//     return;\n// }\nconsole.log(\"Url for search is \",searchUsers+\"?\"+key+\"=\"+value);axios.get(searchUsers+\"?\"+key+\"=\"+value).then(function(response){console.log(\"Search users response is\\n\");console.log(response);var arr=[];if(response.data!=undefined){var loadedRecommendations=JSON.parse(sessionStorage.getItem('searchedusers'));if(loadedRecommendations==null){loadedRecommendations=[];}loadedRecommendations.push(response.data);sessionStorage.setItem(\"searchedusers\",JSON.stringify(loadedRecommendations));arr.push(response.data);setUsers(arr);}else{alert(\"No users with the given username found\");}});/* const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n        console.log(\"Logged in user is \\n\");\r\n        console.log(loggedInUser);\r\n        var jsonData = {};\r\n            jsonData['age'] = parseInt(loggedInUser['age']);\r\n            jsonData['sex']= loggedInUser['sex'];\r\n            jsonData['orientation']= loggedInUser['orientation'];\r\n            jsonData['diet']= loggedInUser['diet'];\r\n            jsonData['drinks']= loggedInUser['drinks'];\r\n            jsonData['drugs']= loggedInUser['drugs'];\r\n            jsonData['ethnicity']= loggedInUser['ethnicity'];\r\n            jsonData['income']= loggedInUser['income'];\r\n            jsonData['location']= loggedInUser['location'];\r\n            jsonData['pets']= loggedInUser['pets'];\r\n            jsonData['smokes']= loggedInUser['smokes'];\r\n            jsonData['speaks']= loggedInUser['speaks'];\r\n            console.log(\"Json data is\\n\");\r\n            console.log(jsonData);\r\n            axios.post(getRecommendations, jsonData).then(response => {\r\n                // TODO: Attach the response to the users that are displayed in the page\r\n                for(var index in response.data.recommendations)\r\n                {\r\n                    var recommendation = response.data.recommendations[index];\r\n                    console.log(recommendation['friendlist'])\r\n                    recommendation['friendlist'] = recommendation['friendlist'].replace(/'/g, '\"');\r\n                    recommendation['friendlist'] = JSON.parse(recommendation['friendlist']);\r\n                }\r\n                console.log(response.data.recommendations);\r\n                setUsers(response.data.recommendations);\r\n                \r\n            }); */};var number=0;var handleClick=function handleClick(receiver){var requestBody={\"sender\":user.username,\"receiver\":receiver,\"request\":\"pending\"};axios.post(editUserUrl,requestBody).then(function(response){console.log(response);sessionStorage.setItem('user',JSON.stringify(response.data));setUser(response.data);var newUsers=users.map(function(eachUser){if(eachUser.username===receiver){eachUser.friendlist.push({name:user.name,username:user.username,request:\"pending\",status:\"received\"});}return eachUser;});setUsers(newUsers);sessionStorage.setItem('recommendations',JSON.stringify(newUsers));alert('Request sent succesfully');}).catch(function(error){if(error.response.status===401||error.response.status===403){alert(error.response.data.message);}else{alert('Backend server error');}});};var checkSent=function checkSent(friends){if(friends!=undefined){for(var i=0;i<friends.length;i++){if(friends[i].username===user.username&&friends[i].status===\"received\"){return true;}}}return false;};var checkReceived=function checkReceived(friends){if(friends!=undefined){for(var i=0;i<friends.length;i++){if(friends[i].username===user.username&&friends[i].status===\"sent\"){return true;}}}return false;};if(user&&users){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{class:\"alert alert-success alert-dismissible fade show\",role:\"alert\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Hello \",name,\"!\"]}),\" You have been logged in.\",/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn-close\",\"data-bs-dismiss\":\"alert\",\"aria-label\":\"Close\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"By\",id:\"key\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"Value\",id:\"value\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Search\"})]}),/*#__PURE__*/_jsx(\"h3\",{class:\"mb-30\",children:\"Here are some recommendations for you.\"}),users.filter(function(u){var fr=user.friendlist;var found=false;console.log(\"Friendlist is \\n\");console.log(fr);if(fr!=undefined){for(var i=0;i<fr.length;i++){if(fr[i].username===u.username&&(fr[i].request===\"accepted\"||fr[i].request===\"rejected\")){found=true;}}}if(u.username===user.username){found=true;}if(!found)return u;}).map(function(receiver){number+=1;var link=\"my-profile?uname=\"+receiver.username;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{style:{float:\"right\",width:\"45%\",margin:\"20px\"},children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{style:{padding:\"5px\"},children:[receiver.name,\" ( \",/*#__PURE__*/_jsx(\"a\",{href:link,children:receiver.username}),\" )\"]})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{style:{padding:\"5px\"},children:receiver.location})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{style:{padding:\"5px\"},children:receiver.sex==\"m\"?\"Male\":\"Female\"})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:checkSent(receiver.friendlist)?/*#__PURE__*/_jsx(\"button\",{disabled:true,children:\"Sent\"}):checkReceived(receiver.friendlist)?/*#__PURE__*/_jsx(\"button\",{disabled:true,children:\"Received Request\"}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleClick(receiver.username);},children:\"Add Friend\"})})})]})});}),/*#__PURE__*/_jsx(\"input\",{class:\"btn btn-secondary\",type:\"button\",value:\"Logout\",onClick:logoutHandler})]});}};export default Home;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getUser","resetUserSession","getUsers","axios","getRecommendations","editUserUrl","searchUsers","Home","navigate","user","setUser","users","setUsers","searchUser","setSearchUser","name","loadRecommendations","logoutHandler","event","loadedRecommendations","JSON","parse","sessionStorage","getItem","undefined","console","log","loggedInUser","jsonData","parseInt","post","then","response","data","recommendations","setItem","stringify","submitHandler","preventDefault","key","document","getElementById","value","get","arr","push","alert","number","handleClick","receiver","requestBody","username","newUsers","map","eachUser","friendlist","request","status","catch","error","message","checkSent","friends","i","length","checkReceived","filter","u","fr","found","link","float","width","margin","padding","location","sex"],"sources":["C:/Users/Ganesh/Desktop/AIO/Masters/NYU/Fall 2022/Cloud Computing/aws-roommate-finder/frontend/src/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { getUser, resetUserSession, getUsers } from './service/AuthService';\r\n// import axios from 'axios';\r\n\r\n// // const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\r\n// const editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\r\n\r\n// const Home = () => {\r\n//     const navigate = useNavigate();\r\n//     const user = getUser();\r\n//     const [users, setUsers] = useState(getUsers())\r\n//     // \r\n//     const [searchUser, setUser] = useState('');\r\n//     const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n//     useEffect(() => {\r\n//         if (!user) {\r\n//             navigate(\"/login\")\r\n//         }\r\n//     }, [user])\r\n\r\n//     const logoutHandler = () => {\r\n//         resetUserSession();\r\n//         navigate('/login');\r\n//     }\r\n\r\n//     const submitHandler = (event) => {\r\n//         event.preventDefault();\r\n//         if (searchUser.trim() === '') {\r\n//             return;\r\n//         }\r\n//     }\r\n\r\n//     const handleClick = (receiver) => {\r\n//         const requestBody = {\r\n//             \"sender\": user.username,\r\n//             \"receiver\": receiver,\r\n//             \"request\": \"pending\"\r\n//         }\r\n//         axios.post(editUserUrl, requestBody).then(response => {\r\n//             sessionStorage.setItem('scanResult', JSON.stringify(response.data));\r\n//             const data = response.data;\r\n//             for (let i = 0; i < data.length; i++) {\r\n//                 if (data[i].username === user.username) {\r\n//                     sessionStorage.setItem('user', JSON.stringify(data[i]));\r\n//                     break\r\n//                 }\r\n//             }\r\n//             setUsers(response.data)\r\n//             alert('Request sent succesfully');\r\n//         }).catch(error => {\r\n//             if (error.response.status === 401 || error.response.status === 403) {\r\n//                 alert(error.response.data.message);\r\n//             } else {\r\n//                 alert('Backend server error');\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     const checkSent = (friends) => {\r\n//         for (let i = 0; i < friends.length; i++) {\r\n//             if (friends[i].name === user.username && friends[i].status === \"received\") {\r\n//                 return true\r\n//             }\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n//     const checkReceived = (friends) => {\r\n//         for (let i = 0; i < friends.length; i++) {\r\n//             if (friends[i].name === user.username && friends[i].status === \"sent\") {\r\n//                 return true\r\n//             }\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n//     if (user) {\r\n//         return (\r\n//             <div>\r\n\r\n//                 <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n//                 <strong>Hello {name}!</strong> You have been logged in.\r\n//                 <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n//                 </div>\r\n\r\n//                 <form onSubmit={submitHandler}>\r\n//                     <div class=\"input-group mb-3\">\r\n//                         <input type=\"text\" value={searchUser} onChange={event => setUser(event.target.value)} class=\"form-control\" placeholder=\"Search a user directly..\" aria-label=\"Search text\" aria-describedby=\"button-search\"/>\r\n//                         <button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-search\">Search</button>\r\n//                     </div>\r\n//                 </form>\r\n\r\n//                 <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\r\n\r\n//                 <ul>\r\n//                     {users.filter((u) => {\r\n//                         let fr = user.friendlist;\r\n//                         let found = false;\r\n//                         for (let i = 0; i < fr.length; i++) {\r\n//                             if (fr[i].name === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\r\n//                                 found = true\r\n//                             }\r\n//                         }\r\n//                         if (u.username === user.username) {\r\n//                             found = true\r\n//                         }\r\n//                         if (!found) return u\r\n//                     }).map((receiver) => {\r\n//                         return <li key={receiver.username} style={{ display: \"flex\" }}>\r\n//                             <div>\r\n//                                 {receiver.username}\r\n//                             </div>\r\n//                             {checkSent(receiver.friendlist) ?\r\n//                                 <button disabled>Sent</button> :\r\n//                                 checkReceived(receiver.friendlist) ?\r\n//                                     <button disabled>Received Request</button> :\r\n//                                     <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\r\n\r\n//                             }\r\n\r\n//                         </li>\r\n//                     })}\r\n//                 </ul>\r\n//                 <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Home;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUser, resetUserSession, getUsers } from './service/AuthService';\r\nimport axios from 'axios';\r\n\r\nconst getRecommendations = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/home\";\r\n// const editUserUrl = \"https://lqjgcqa4lf.execute-api.us-east-1.amazonaws.com/prod/edituser\"\r\nconst editUserUrl = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/edituser\"\r\nvar searchUsers = \"https://ao9v2ya7ci.execute-api.us-east-1.amazonaws.com/deploy/search\";\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState(getUser());\r\n    //TODO: Commented this line\r\n    var [users, setUsers] = useState(getUsers())\r\n    // console.log(\"Users:\", users)\r\n    const [searchUser, setSearchUser] = useState('');\r\n    const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [user])\r\n    React.useEffect(() => loadRecommendations(), [])\r\n    const logoutHandler = () => {\r\n        resetUserSession();\r\n        navigate('/login');\r\n    }\r\n\r\n    const loadRecommendations = (event) => {\r\n        const loadedRecommendations = JSON.parse(sessionStorage.getItem('recommendations'));\r\n        if (loadedRecommendations == undefined && user) {\r\n            console.log(\"In load recommendations \\n\");\r\n            const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n            console.log(\"Logged in user is \\n\");\r\n            console.log(loggedInUser);\r\n            var jsonData = {};\r\n            jsonData['age'] = parseInt(loggedInUser['age']);\r\n            jsonData['sex'] = loggedInUser['sex'];\r\n            jsonData['orientation'] = loggedInUser['orientation'];\r\n            jsonData['diet'] = loggedInUser['diet'];\r\n            jsonData['drinks'] = loggedInUser['drinks'];\r\n            jsonData['drugs'] = loggedInUser['drugs'];\r\n            jsonData['ethnicity'] = loggedInUser['ethnicity'];\r\n            jsonData['income'] = loggedInUser['income'];\r\n            jsonData['location'] = loggedInUser['location'];\r\n            jsonData['pets'] = loggedInUser['pets'];\r\n            jsonData['smokes'] = loggedInUser['smokes'];\r\n            jsonData['speaks'] = loggedInUser['speaks'];\r\n            console.log(\"Json data is\\n\");\r\n            console.log(jsonData);\r\n            axios.post(getRecommendations, jsonData).then(response => {\r\n                console.log(response.data.recommendations);\r\n                sessionStorage.setItem(\"recommendations\", JSON.stringify(response.data.recommendations));\r\n                setUsers(response.data.recommendations);\r\n            });\r\n        }\r\n        else {\r\n            setUsers(loadedRecommendations);\r\n        }\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        var key = document.getElementById(\"key\").value;\r\n        var value = document.getElementById(\"value\").value;\r\n        // TODO: Make a call to the /search API\r\n\r\n        // if (searchUser.trim() === '') {\r\n        //     return;\r\n        // }\r\n        console.log(\"Url for search is \", searchUsers + \"?\" + key + \"=\" + value);\r\n        axios.get(searchUsers + \"?\" + key + \"=\" + value).then((response) => {\r\n            console.log(\"Search users response is\\n\");\r\n            console.log(response);\r\n            var arr = [];\r\n            if (response.data != undefined) {\r\n                var loadedRecommendations = JSON.parse(sessionStorage.getItem('searchedusers'));\r\n                if (loadedRecommendations == null) {\r\n                    loadedRecommendations = [];\r\n                }\r\n                loadedRecommendations.push(response.data);\r\n                sessionStorage.setItem(\"searchedusers\", JSON.stringify(loadedRecommendations));\r\n                arr.push(response.data);\r\n                setUsers(arr);\r\n            }\r\n            else {\r\n                alert(\"No users with the given username found\");\r\n            }\r\n        })\r\n        /* const loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n        console.log(\"Logged in user is \\n\");\r\n        console.log(loggedInUser);\r\n        var jsonData = {};\r\n            jsonData['age'] = parseInt(loggedInUser['age']);\r\n            jsonData['sex']= loggedInUser['sex'];\r\n            jsonData['orientation']= loggedInUser['orientation'];\r\n            jsonData['diet']= loggedInUser['diet'];\r\n            jsonData['drinks']= loggedInUser['drinks'];\r\n            jsonData['drugs']= loggedInUser['drugs'];\r\n            jsonData['ethnicity']= loggedInUser['ethnicity'];\r\n            jsonData['income']= loggedInUser['income'];\r\n            jsonData['location']= loggedInUser['location'];\r\n            jsonData['pets']= loggedInUser['pets'];\r\n            jsonData['smokes']= loggedInUser['smokes'];\r\n            jsonData['speaks']= loggedInUser['speaks'];\r\n            console.log(\"Json data is\\n\");\r\n            console.log(jsonData);\r\n            axios.post(getRecommendations, jsonData).then(response => {\r\n                // TODO: Attach the response to the users that are displayed in the page\r\n                for(var index in response.data.recommendations)\r\n                {\r\n                    var recommendation = response.data.recommendations[index];\r\n                    console.log(recommendation['friendlist'])\r\n                    recommendation['friendlist'] = recommendation['friendlist'].replace(/'/g, '\"');\r\n                    recommendation['friendlist'] = JSON.parse(recommendation['friendlist']);\r\n                }\r\n                console.log(response.data.recommendations);\r\n                setUsers(response.data.recommendations);\r\n                \r\n            }); */\r\n    }\r\n    let number = 0;\r\n    const handleClick = (receiver) => {\r\n        const requestBody = {\r\n            \"sender\": user.username,\r\n            \"receiver\": receiver,\r\n            \"request\": \"pending\"\r\n        }\r\n        axios.post(editUserUrl, requestBody).then(response => {\r\n            console.log(response);\r\n            sessionStorage.setItem('user', JSON.stringify(response.data));\r\n            setUser(response.data)\r\n            let newUsers = users.map((eachUser) => {\r\n                if (eachUser.username === receiver) {\r\n                    eachUser.friendlist.push({ name: user.name, username: user.username, request: \"pending\", status: \"received\" })\r\n                }\r\n                return eachUser\r\n            })\r\n            setUsers(newUsers)\r\n            sessionStorage.setItem('recommendations', JSON.stringify(newUsers));\r\n            alert('Request sent succesfully');\r\n        }).catch(error => {\r\n            if (error.response.status === 401 || error.response.status === 403) {\r\n                alert(error.response.data.message);\r\n            } else {\r\n                alert('Backend server error');\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkSent = (friends) => {\r\n        if (friends != undefined) {\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (friends[i].username === user.username && friends[i].status === \"received\") {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkReceived = (friends) => {\r\n        if (friends != undefined) {\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (friends[i].username === user.username && friends[i].status === \"sent\") {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    if (user && users) {\r\n        return (\r\n            <div>\r\n\r\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>Hello {name}!</strong> You have been logged in.\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                </div>\r\n\r\n                <form onSubmit={submitHandler}>\r\n                    <input type=\"text\" name=\"By\" id=\"key\" />\r\n                    <input type=\"text\" name=\"Value\" id=\"value\" />\r\n                    <input type=\"submit\" value=\"Search\" />\r\n                </form>\r\n\r\n                <h3 class=\"mb-30\">Here are some recommendations for you.</h3>\r\n\r\n\r\n                {users.filter((u) => {\r\n                    let fr = user.friendlist;\r\n                    let found = false;\r\n                    console.log(\"Friendlist is \\n\");\r\n                    console.log(fr);\r\n                    if (fr != undefined) {\r\n                        for (let i = 0; i < fr.length; i++) {\r\n                            if (fr[i].username === u.username && (fr[i].request === \"accepted\" || fr[i].request === \"rejected\")) {\r\n                                found = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (u.username === user.username) {\r\n                        found = true\r\n                    }\r\n                    if (!found) return u\r\n                }).map((receiver) => {\r\n                    number += 1;\r\n                    var link = \"my-profile?uname=\" + receiver.username;\r\n                    return <div>\r\n                        {/* <div>\r\n                                {receiver.username}\r\n                            </div> */}\r\n                        <table style={{ float: \"right\", width: \"45%\", margin: \"20px\" }}>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.name} ( <a href={link}>{receiver.username}</a> )</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.location}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ padding: \"5px\" }}>{receiver.sex == \"m\" ? \"Male\" : \"Female\"}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    {checkSent(receiver.friendlist) ?\r\n                                        <button disabled>Sent</button> :\r\n                                        checkReceived(receiver.friendlist) ?\r\n                                            <button disabled>Received Request</button> :\r\n                                            <button onClick={() => handleClick(receiver.username)}>Add Friend</button>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                })}\r\n\r\n                <input class=\"btn btn-secondary\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"olD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,CAAEC,gBAAgB,CAAEC,QAAQ,KAAQ,uBAAuB,CAC3E,MAAOC,MAAK,KAAM,OAAO,CAAC,wFAE1B,GAAMC,mBAAkB,CAAG,oEAAoE,CAC/F;AACA,GAAMC,YAAW,CAAG,wEAAwE,CAC5F,GAAIC,YAAW,CAAG,sEAAsE,CACxF,GAAMC,KAAI,CAAG,QAAPA,KAAI,EAAS,CACf,GAAMC,SAAQ,CAAGT,WAAW,EAAE,CAC9B,cAAwBD,QAAQ,CAACE,OAAO,EAAE,CAAC,wCAApCS,IAAI,eAAEC,OAAO,eACpB;AACA,eAAwBZ,QAAQ,CAACI,QAAQ,EAAE,CAAC,yCAAvCS,KAAK,eAAEC,QAAQ,eACpB;AACA,eAAoCd,QAAQ,CAAC,EAAE,CAAC,yCAAzCe,UAAU,eAAEC,aAAa,eAChC,GAAMC,KAAI,CAAGN,IAAI,GAAK,WAAW,EAAIA,IAAI,CAAGA,IAAI,CAACM,IAAI,CAAG,EAAE,CAG1DlB,SAAS,CAAC,UAAM,CACZ,GAAI,CAACY,IAAI,CAAE,CACPD,QAAQ,CAAC,QAAQ,CAAC,CACtB,CACJ,CAAC,CAAE,CAACC,IAAI,CAAC,CAAC,CACVb,KAAK,CAACC,SAAS,CAAC,iBAAMmB,oBAAmB,EAAE,GAAE,EAAE,CAAC,CAChD,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAS,CACxBhB,gBAAgB,EAAE,CAClBO,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAAC,CAED,GAAMQ,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIE,KAAK,CAAK,CACnC,GAAMC,sBAAqB,CAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CACnF,GAAIJ,qBAAqB,EAAIK,SAAS,EAAIf,IAAI,CAAE,CAC5CgB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzC,GAAMC,aAAY,CAAGP,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAC/DE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCD,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC,CACzB,GAAIC,SAAQ,CAAG,CAAC,CAAC,CACjBA,QAAQ,CAAC,KAAK,CAAC,CAAGC,QAAQ,CAACF,YAAY,CAAC,KAAK,CAAC,CAAC,CAC/CC,QAAQ,CAAC,KAAK,CAAC,CAAGD,YAAY,CAAC,KAAK,CAAC,CACrCC,QAAQ,CAAC,aAAa,CAAC,CAAGD,YAAY,CAAC,aAAa,CAAC,CACrDC,QAAQ,CAAC,MAAM,CAAC,CAAGD,YAAY,CAAC,MAAM,CAAC,CACvCC,QAAQ,CAAC,QAAQ,CAAC,CAAGD,YAAY,CAAC,QAAQ,CAAC,CAC3CC,QAAQ,CAAC,OAAO,CAAC,CAAGD,YAAY,CAAC,OAAO,CAAC,CACzCC,QAAQ,CAAC,WAAW,CAAC,CAAGD,YAAY,CAAC,WAAW,CAAC,CACjDC,QAAQ,CAAC,QAAQ,CAAC,CAAGD,YAAY,CAAC,QAAQ,CAAC,CAC3CC,QAAQ,CAAC,UAAU,CAAC,CAAGD,YAAY,CAAC,UAAU,CAAC,CAC/CC,QAAQ,CAAC,MAAM,CAAC,CAAGD,YAAY,CAAC,MAAM,CAAC,CACvCC,QAAQ,CAAC,QAAQ,CAAC,CAAGD,YAAY,CAAC,QAAQ,CAAC,CAC3CC,QAAQ,CAAC,QAAQ,CAAC,CAAGD,YAAY,CAAC,QAAQ,CAAC,CAC3CF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7BD,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC,CACrBzB,KAAK,CAAC2B,IAAI,CAAC1B,kBAAkB,CAAEwB,QAAQ,CAAC,CAACG,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACtDP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAACC,IAAI,CAACC,eAAe,CAAC,CAC1CZ,cAAc,CAACa,OAAO,CAAC,iBAAiB,CAAEf,IAAI,CAACgB,SAAS,CAACJ,QAAQ,CAACC,IAAI,CAACC,eAAe,CAAC,CAAC,CACxFtB,QAAQ,CAACoB,QAAQ,CAACC,IAAI,CAACC,eAAe,CAAC,CAC3C,CAAC,CAAC,CACN,CAAC,IACI,CACDtB,QAAQ,CAACO,qBAAqB,CAAC,CACnC,CACJ,CAAC,CAED,GAAMkB,cAAa,CAAG,QAAhBA,cAAa,CAAInB,KAAK,CAAK,CAC7BA,KAAK,CAACoB,cAAc,EAAE,CACtB,GAAIC,IAAG,CAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,KAAK,CAC9C,GAAIA,MAAK,CAAGF,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK,CAClD;AAEA;AACA;AACA;AACAjB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEpB,WAAW,CAAG,GAAG,CAAGiC,GAAG,CAAG,GAAG,CAAGG,KAAK,CAAC,CACxEvC,KAAK,CAACwC,GAAG,CAACrC,WAAW,CAAG,GAAG,CAAGiC,GAAG,CAAG,GAAG,CAAGG,KAAK,CAAC,CAACX,IAAI,CAAC,SAACC,QAAQ,CAAK,CAChEP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzCD,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC,CACrB,GAAIY,IAAG,CAAG,EAAE,CACZ,GAAIZ,QAAQ,CAACC,IAAI,EAAIT,SAAS,CAAE,CAC5B,GAAIL,sBAAqB,CAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,CAC/E,GAAIJ,qBAAqB,EAAI,IAAI,CAAE,CAC/BA,qBAAqB,CAAG,EAAE,CAC9B,CACAA,qBAAqB,CAAC0B,IAAI,CAACb,QAAQ,CAACC,IAAI,CAAC,CACzCX,cAAc,CAACa,OAAO,CAAC,eAAe,CAAEf,IAAI,CAACgB,SAAS,CAACjB,qBAAqB,CAAC,CAAC,CAC9EyB,GAAG,CAACC,IAAI,CAACb,QAAQ,CAACC,IAAI,CAAC,CACvBrB,QAAQ,CAACgC,GAAG,CAAC,CACjB,CAAC,IACI,CACDE,KAAK,CAAC,wCAAwC,CAAC,CACnD,CACJ,CAAC,CAAC,CACF;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBACI,CAAC,CACD,GAAIC,OAAM,CAAG,CAAC,CACd,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,QAAQ,CAAK,CAC9B,GAAMC,YAAW,CAAG,CAChB,QAAQ,CAAEzC,IAAI,CAAC0C,QAAQ,CACvB,UAAU,CAAEF,QAAQ,CACpB,SAAS,CAAE,SACf,CAAC,CACD9C,KAAK,CAAC2B,IAAI,CAACzB,WAAW,CAAE6C,WAAW,CAAC,CAACnB,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAClDP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC,CACrBV,cAAc,CAACa,OAAO,CAAC,MAAM,CAAEf,IAAI,CAACgB,SAAS,CAACJ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC7DvB,OAAO,CAACsB,QAAQ,CAACC,IAAI,CAAC,CACtB,GAAImB,SAAQ,CAAGzC,KAAK,CAAC0C,GAAG,CAAC,SAACC,QAAQ,CAAK,CACnC,GAAIA,QAAQ,CAACH,QAAQ,GAAKF,QAAQ,CAAE,CAChCK,QAAQ,CAACC,UAAU,CAACV,IAAI,CAAC,CAAE9B,IAAI,CAAEN,IAAI,CAACM,IAAI,CAAEoC,QAAQ,CAAE1C,IAAI,CAAC0C,QAAQ,CAAEK,OAAO,CAAE,SAAS,CAAEC,MAAM,CAAE,UAAW,CAAC,CAAC,CAClH,CACA,MAAOH,SAAQ,CACnB,CAAC,CAAC,CACF1C,QAAQ,CAACwC,QAAQ,CAAC,CAClB9B,cAAc,CAACa,OAAO,CAAC,iBAAiB,CAAEf,IAAI,CAACgB,SAAS,CAACgB,QAAQ,CAAC,CAAC,CACnEN,KAAK,CAAC,0BAA0B,CAAC,CACrC,CAAC,CAAC,CAACY,KAAK,CAAC,SAAAC,KAAK,CAAI,CACd,GAAIA,KAAK,CAAC3B,QAAQ,CAACyB,MAAM,GAAK,GAAG,EAAIE,KAAK,CAAC3B,QAAQ,CAACyB,MAAM,GAAK,GAAG,CAAE,CAChEX,KAAK,CAACa,KAAK,CAAC3B,QAAQ,CAACC,IAAI,CAAC2B,OAAO,CAAC,CACtC,CAAC,IAAM,CACHd,KAAK,CAAC,sBAAsB,CAAC,CACjC,CACJ,CAAC,CAAC,CACN,CAAC,CAED,GAAMe,UAAS,CAAG,QAAZA,UAAS,CAAIC,OAAO,CAAK,CAC3B,GAAIA,OAAO,EAAItC,SAAS,CAAE,CACtB,IAAK,GAAIuC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,OAAO,CAACE,MAAM,CAAED,CAAC,EAAE,CAAE,CACrC,GAAID,OAAO,CAACC,CAAC,CAAC,CAACZ,QAAQ,GAAK1C,IAAI,CAAC0C,QAAQ,EAAIW,OAAO,CAACC,CAAC,CAAC,CAACN,MAAM,GAAK,UAAU,CAAE,CAC3E,MAAO,KAAI,CACf,CACJ,CACJ,CACA,MAAO,MAAK,CAChB,CAAC,CAED,GAAMQ,cAAa,CAAG,QAAhBA,cAAa,CAAIH,OAAO,CAAK,CAC/B,GAAIA,OAAO,EAAItC,SAAS,CAAE,CACtB,IAAK,GAAIuC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,OAAO,CAACE,MAAM,CAAED,CAAC,EAAE,CAAE,CACrC,GAAID,OAAO,CAACC,CAAC,CAAC,CAACZ,QAAQ,GAAK1C,IAAI,CAAC0C,QAAQ,EAAIW,OAAO,CAACC,CAAC,CAAC,CAACN,MAAM,GAAK,MAAM,CAAE,CACvE,MAAO,KAAI,CACf,CACJ,CACJ,CACA,MAAO,MAAK,CAChB,CAAC,CAED,GAAIhD,IAAI,EAAIE,KAAK,CAAE,CACf,mBACI,oCAEI,aAAK,KAAK,CAAC,iDAAiD,CAAC,IAAI,CAAC,OAAO,wBACrE,mCAAeI,IAAI,OAAW,0CAC9B,eAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,kBAAgB,OAAO,CAAC,aAAW,OAAO,EAAU,GAC1F,cAEN,cAAM,QAAQ,CAAEsB,aAAc,wBAC1B,cAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAG,cACxC,cAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAG,cAC7C,cAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAG,GACnC,cAEP,WAAI,KAAK,CAAC,OAAO,oDAA4C,CAG5D1B,KAAK,CAACuD,MAAM,CAAC,SAACC,CAAC,CAAK,CACjB,GAAIC,GAAE,CAAG3D,IAAI,CAAC8C,UAAU,CACxB,GAAIc,MAAK,CAAG,KAAK,CACjB5C,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAC/BD,OAAO,CAACC,GAAG,CAAC0C,EAAE,CAAC,CACf,GAAIA,EAAE,EAAI5C,SAAS,CAAE,CACjB,IAAK,GAAIuC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGK,EAAE,CAACJ,MAAM,CAAED,CAAC,EAAE,CAAE,CAChC,GAAIK,EAAE,CAACL,CAAC,CAAC,CAACZ,QAAQ,GAAKgB,CAAC,CAAChB,QAAQ,GAAKiB,EAAE,CAACL,CAAC,CAAC,CAACP,OAAO,GAAK,UAAU,EAAIY,EAAE,CAACL,CAAC,CAAC,CAACP,OAAO,GAAK,UAAU,CAAC,CAAE,CACjGa,KAAK,CAAG,IAAI,CAChB,CACJ,CACJ,CACA,GAAIF,CAAC,CAAChB,QAAQ,GAAK1C,IAAI,CAAC0C,QAAQ,CAAE,CAC9BkB,KAAK,CAAG,IAAI,CAChB,CACA,GAAI,CAACA,KAAK,CAAE,MAAOF,EAAC,CACxB,CAAC,CAAC,CAACd,GAAG,CAAC,SAACJ,QAAQ,CAAK,CACjBF,MAAM,EAAI,CAAC,CACX,GAAIuB,KAAI,CAAG,mBAAmB,CAAGrB,QAAQ,CAACE,QAAQ,CAClD,mBAAO,kCAIH,eAAO,KAAK,CAAE,CAAEoB,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,MAAO,CAAE,wBAC3D,iCACI,YAAI,KAAK,CAAE,CAAEC,OAAO,CAAE,KAAM,CAAE,WAAEzB,QAAQ,CAAClC,IAAI,oBAAI,UAAG,IAAI,CAAEuD,IAAK,UAAErB,QAAQ,CAACE,QAAQ,EAAK,QAAO,EAC7F,cACL,iCACI,WAAI,KAAK,CAAE,CAAEuB,OAAO,CAAE,KAAM,CAAE,UAAEzB,QAAQ,CAAC0B,QAAQ,EAAM,EACtD,cACL,iCACI,WAAI,KAAK,CAAE,CAAED,OAAO,CAAE,KAAM,CAAE,UAAEzB,QAAQ,CAAC2B,GAAG,EAAI,GAAG,CAAG,MAAM,CAAG,QAAQ,EAAM,EAC5E,cACL,iCACI,oBACKf,SAAS,CAACZ,QAAQ,CAACM,UAAU,CAAC,cAC3B,eAAQ,QAAQ,uBAAc,CAC9BU,aAAa,CAAChB,QAAQ,CAACM,UAAU,CAAC,cAC9B,eAAQ,QAAQ,mCAA0B,cAC1C,eAAQ,OAAO,CAAE,yBAAMP,YAAW,CAACC,QAAQ,CAACE,QAAQ,CAAC,EAAC,wBAAoB,EAEjF,EACJ,GACD,EAEN,CACV,CAAC,CAAC,cAEF,cAAO,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAElC,aAAc,EAAG,GACtF,CAEd,CACJ,CAAC,CAED,cAAeV,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}